{"version":3,"file":"rz.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAY,GAAID,IAEhBD,EAAS,GAAIC,IARf,CASGK,MAAM,WACT,O,gCCVA,SAASC,EAAQC,GAGf,OAAQL,EAAOD,QAAUK,EAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC/G,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,GACvHL,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAiB,QAAIC,EAAOD,QAAUK,EAAQC,GAG5FL,EAAOD,QAAUK,EAASJ,EAAOD,QAAQW,YAAa,EAAMV,EAAOD,QAAiB,QAAIC,EAAOD,S,0UCPzFY,EAAcC,OAAOC,aAAa,KAIlCC,EAAW,SAACC,GAAD,OAAWC,QAAyB,iBAAVD,GAAsBA,aAAiBH,SAE5EK,EAAW,SAACF,GAAD,OAAWC,QAAyB,iBAAVD,GAAsBG,OAAOC,SAASJ,KAE3EK,EAAc,SAACC,GAAD,OAAOL,SAASE,OAAOI,MAAMC,WAAWF,KAAOH,OAAOC,SAASE,KAE7EG,EAAY,SAACT,GAAD,OAAWC,QAAyB,kBAAVD,IAEtCU,EAAS,SAACV,GAAD,OAAWC,QAAQD,aAAiBW,OAE7CC,EAAU,SAACZ,GAAD,OAAWC,QAAQD,GAA0B,WAAjB,EAAOA,IAAsBA,EAAMP,cAAgBoB,QAEzFC,EAAa,SAACd,GAAD,OAAWC,QAAyB,mBAAVD,IAEvCe,EAAW,SAACf,GAAD,OAAWC,QAAQD,GAA0B,WAAjB,EAAOA,IAAsBA,EAAMP,cAAgBuB,SAE1FC,EAAoB,SAACjB,GAAD,OAAWC,QAAQ,MAAOD,IAE9CkB,EAAW,SAAClB,GAAD,OAAWC,QAAQD,GAA0B,WAAjB,EAAOA,IAAsBA,EAAMP,cAAgB0B,SAE1FC,EAAc,SAACpB,GAAD,OAAWC,QAAQD,GAAmB,SAAVA,GAA8B,cAAVA,GAAmC,KAAVA,IAEvFqB,EAAW,SAACC,GAAD,OAASrB,QAAQsB,KAAKC,MAAMF,KAASA,IAOhDG,EAAiB,SAACC,GAAD,OAAezB,QAAQ,qUAAqU0B,KAAKD,IACrX,8hDAA8hDC,KAAKD,EAAUE,OAAO,EAAG,MAGpjDC,EAAe,SAACC,GACpB,IAAMC,EAAM,CAACC,MAAO,EAAGC,OAAQ,EAAGC,QAAQ,GACpCC,EAAML,GAAWM,SAEvB,OADID,GAAOA,EAAIE,iBAAmBF,EAAIE,gBAAgBC,cAAeP,EAAIC,MAAQG,EAAIE,gBAAgBC,YAAaP,EAAIE,OAASE,EAAIE,gBAAgBE,aAAcR,EAAIG,QAAS,GACvKH,GAGHS,EAAa,SAACC,GAClB,IAAMV,EAAM,CAACC,MAAO,EAAGC,OAAQ,EAAGC,QAAQ,GACpCQ,EAAMD,GAASE,OAErB,OADID,GAAOA,EAAIE,YAAcF,EAAIG,cAAed,EAAIC,MAAQU,EAAIE,WAAYb,EAAIE,OAASS,EAAIG,YAAad,EAAIG,QAAS,GAChHH,GAQHe,EAAY,SAACC,GACjB,IAAIC,EAAI,GACR,IACEA,EAAIC,KAAKC,UAAUH,GACnB,MAAOI,GACPH,EAAI,KAEN,OAAOA,GAGHI,EAAc,SAACC,GACnB,IAAIL,EAAI,GACR,IACEA,EAAIC,KAAKK,MAAMD,GACf,MAAOF,GACPH,EAAI,KAEN,OAAOA,GAIHO,EAAW,SAACR,GAChB,IAAIhB,EAAM,KACV,GAAIrB,EAAOqC,GACThB,EAAM,IAAIpB,KAAKoC,EAAUS,gBAEtB,GAAI5C,EAAQmC,GACfhB,EAAMgB,EAAUU,MAAM,QAEnB,GAAI1C,EAASgC,GAAY,CAC5B,IAAMC,EAAIF,EAAUC,GACpBhB,EAAMqB,EAAYJ,QAEX9C,EAAS6C,IAAchD,EAASgD,IAActC,EAAUsC,MAC/DhB,EAAMgB,GAER,OAAOhB,GAGH2B,EAAU,SAACpE,GACf,IAAMyC,EAAM,GACZ,OAAKhB,EAASzB,IACd0B,OAAO2C,KAAKrE,GAAKsE,SAAQ,SAACC,GACxB9B,EAAI+B,KAAKD,MAEJ9B,GAJoBA,GAOvBgC,EAAY,SAACzE,EAAKuE,GACtB,SAAK9C,EAASzB,KAASS,EAAS8D,KACzB5D,QAAQ4D,KAAOvE,IAGlB0E,EAAc,SAACC,EAAGC,GAKtB,IAJA,IAAIC,EAAKD,EAAEE,QAAQ,aAAc,OAE3BpB,GADNmB,EAAKA,EAAGC,QAAQ,MAAO,KACVC,MAAM,KACfC,EAAKf,EAASU,GACTM,EAAI,EAAGjE,EAAI0C,EAAEwB,OAAQD,EAAIjE,EAAGiE,IAAK,CACxC,IAAME,EAAIzB,EAAEuB,GACZ,KAAIE,KAAKH,GAIF,OAAO,KAHZA,EAAKA,EAAGG,GAKZ,OAAOH,GAOHI,EAAa,SAACpD,EAAKhB,GACvB,IAAIqE,EAAI,EAGR,OAFIzE,EAASI,IAAMe,EAASf,IAAMA,IAAM,GAAKA,GAAK,IAAGqE,EAAIrE,GACzDqE,EAAI,KAAH,IAAG,GAAMA,GACHpD,KAAKC,MAAMF,EAAMqD,GAAKA,GAGzBC,EAAoB,SAACtD,EAAKuD,GAC9B,QAAI3E,EAAS2E,IAAW1E,OAAOmB,EAAMuD,EAAIvD,EAAMuD,EAAKvD,EAAMuD,EAAKvD,IAI3DwD,EAAgB,SAACxD,EAAKhB,EAAGyE,GAC7B,IAAIb,EAAUO,EAAGI,EAAVG,EAAI,EAIX,GAHI9E,EAASI,IAAMe,EAASf,IAAMA,IAAM,GAAKA,GAAK,IAAG0E,EAAI1E,GACzD4D,EAAIQ,EAAWpD,EAAK0D,GAAGC,WAAWb,QAAQ,IAAK,KAE3CY,EAAI,EAEN,IAAW,KADXP,EAAIP,EAAEgB,QAAQ,MACEhB,GAAK,IAAM,IAAIiB,OAAOH,OACjC,CACH,IAAMhC,EAAIkB,EAAET,MAAM,EAAGgB,EAAI,GAAIW,EAAIlB,EAAET,MAAMgB,EAAI,EAAGP,EAAEM,OAASC,EAAI,GAC3DO,EAAI,GAAKI,EAAEZ,OAASQ,EACtBd,EAAIlB,EAAI,IAAMoC,EAAE3B,MAAM,EAAGuB,GAGzBd,GAAK,IAAIiB,OAAOH,GAAKd,EAAEM,OAASC,EAAI,IAEtCP,GAAK,IAAIiB,OAAOH,GAAKd,EAAEM,OAASC,EAAI,IAQxC,IAJ+B,KAA/BA,EAAIP,EAAEgB,QAAQ,QAAsBT,EAAIP,EAAEM,QAE1BK,GAAL,KADXA,EAAIX,EAAEgB,QAAQ,MACM,EAAe,GAEpB,IAAXH,EACF,IAAKC,EAAIP,EAAI,EAAGO,EAAIH,EAAGG,GAAK,EAC1Bd,EAAIA,EAAET,MAAM,EAAGuB,GAAK,IAAMd,EAAET,MAAMuB,EAAGd,EAAEM,OAASQ,EAAI,GAGxD,OAAOd,GAGHmB,EAAc,SAAC/D,EAAKgE,GAExB,IAAMX,EAAID,EAAWpD,EAAK,GAC1B,GAAIqD,EAAI,GAAKA,EAAI,gBAAiB,OAAO,EAEzC,IAAIY,EAAW,MACf,GAD0BxF,EAASuF,KAAIC,EAAWD,EAAEE,UAAUC,eAC7C,QAAbF,GAAmC,QAAbA,GAAmC,QAAbA,EAAoB,OAAO,EAE3E,IAAMG,EAAS,GACfA,EAAO,GAAK,GAAIA,EAAO,GAAK,GAAIA,EAAO,GAAK,GAAIA,EAAO,GAAK,GAAIA,EAAO,GAAK,GAAIA,EAAO,GAAK,GAG5FA,EAAO,IAAI,GAAK,CAAEC,IAAK,SAAUC,IAAK,eAAgBC,IAAK,QAE3DH,EAAO,GAAG,GAAK,CAAEC,IAAK,QAASC,IAAK,aAAcC,IAAK,QACvDH,EAAO,GAAG,GAAK,CAAEC,IAAK,QAASC,IAAK,cAAeC,IAAK,QACxDH,EAAO,GAAG,GAAK,CAAEC,IAAK,QAASC,IAAK,cAAeC,IAAK,QACxDH,EAAO,GAAG,GAAK,CAAEC,IAAK,QAASC,IAAK,cAAeC,IAAK,QAGxDH,EAAO,IAAI,GAAK,QAEhBA,EAAO,GAAG,GAAK,SACfA,EAAO,GAAG,GAAK,SACfA,EAAO,GAAG,GAAK,SACfA,EAAO,GAAG,GAAK,SAGfA,EAAO,IAAI,GAAK,YAEhBA,EAAO,GAAG,GAAK,UACfA,EAAO,GAAG,GAAK,WACfA,EAAO,GAAG,GAAK,WACfA,EAAO,GAAG,GAAK,WAGfA,EAAO,IAAI,GAAK,aAEhBA,EAAO,GAAG,GAAK,WACfA,EAAO,GAAG,GAAK,YACfA,EAAO,GAAG,GAAK,YACfA,EAAO,GAAG,GAAK,YAGfA,EAAO,IAAI,GAAK,aAEhBA,EAAO,GAAG,GAAK,WACfA,EAAO,GAAG,GAAK,YACfA,EAAO,GAAG,GAAK,YACfA,EAAO,GAAG,GAAK,YAGfA,EAAO,IAAI,GAAK,CAAEC,IAAK,SAAUC,IAAK,SAAUC,IAAK,UAErDH,EAAO,GAAG,GAAK,CAAEC,IAAK,UAAWC,IAAK,OAAQC,IAAK,QACnDH,EAAO,GAAG,GAAK,CAAEC,IAAK,UAAWC,IAAK,QAASC,IAAK,SACpDH,EAAO,GAAG,GAAK,CAAEC,IAAK,UAAWC,IAAK,QAASC,IAAK,SACpDH,EAAO,GAAG,GAAK,CAAEC,IAAK,UAAWC,IAAK,QAASC,IAAK,SAIpD,IAAMC,EAAQ,GACdA,EAAM,GAAK,CACT,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,OAAQ,EAAG,QAEjDA,EAAM,GAAK,CACT,EAAG,MAAO,EAAG,MAAO,EAAG,MAAO,EAAG,MAAO,EAAG,OAE7CA,EAAM,GAAK,MACXA,EAAM,GAAK,SACXA,EAAM,GAAK,OACXA,EAAM,GAAK,QACXA,EAAM,GAAK,OACXA,EAAM,GAAK,SACXA,EAAM,GAAK,SACXA,EAAM,IAAM,SACZA,EAAM,IAAM,cACZA,EAAM,IAAM,aACZA,EAAM,IAAM,aACZA,EAAM,IAAM,eACZA,EAAM,IAAM,aACZA,EAAM,IAAM,cACZA,EAAM,IAAM,aACZA,EAAM,IAAM,eACZA,EAAM,IAAM,eACZA,EAAM,IAAM,WACZA,EAAM,IAAM,WACZA,EAAM,IAAM,QACZA,EAAM,IAAM,YACZA,EAAM,IAAM,aACZA,EAAM,IAAM,YACZA,EAAM,IAAM,cACZA,EAAM,IAAM,YACZA,EAAM,KAAO,MACbA,EAAM,KAAO,SACbA,EAAM,KAAO,SACbA,EAAM,KAAO,YACbA,EAAM,KAAO,UACbA,EAAM,KAAO,WACbA,EAAM,KAAO,UACbA,EAAM,KAAO,YACbA,EAAM,KAAO,YAEb,IAAYvB,EAAGwB,EAAXC,EAAI,GAAUC,EAAI1E,KAAK2E,MAAMvB,GAGjC,GAAIsB,EAAI,EAAG,CAET,IAAME,EAAI,GACV,IAAK5B,EAAI,EAAGA,GAAK,EAAGA,IAClB4B,EAAE5B,GAAK0B,EAAI,IACXA,EAAI1E,KAAK2E,MAAMD,EAAI,KAErB,IAAMjB,EAAI,GAEV,IAAKT,EAAI,EAAGA,GAAK,EAAGA,IAClBS,EAAET,GAAK,GACPS,EAAET,GAAG,GAAK4B,EAAE5B,GAAK,GACjBS,EAAET,GAAG,IAAO4B,EAAE5B,GAAK,IAAOS,EAAET,GAAG,GAC/BS,EAAET,GAAG,KAAO4B,EAAE5B,GAAKS,EAAET,GAAG,IAAMS,EAAET,GAAG,GACnCS,EAAET,GAAG,IAAM4B,EAAE5B,GAAK,IAGpB,IAAKA,EAAI,EAAGA,GAAK,EAAGA,IACd4B,EAAE5B,GAAK,IACLuB,EAAMd,EAAET,GAAG,QACbyB,GAAK,KAAOjF,EAAS+E,EAAMd,EAAET,GAAG,OAASuB,EAAMd,EAAET,GAAG,MAAMA,GAAKuB,EAAMd,EAAET,GAAG,QAGxEuB,EAAMd,EAAET,GAAG,KACbyB,GAAK,KAAOjF,EAAS+E,EAAMd,EAAET,GAAG,MAAQuB,EAAMd,EAAET,GAAG,KAAKA,GAAKuB,EAAMd,EAAET,GAAG,OAGpEuB,EAAMd,EAAET,GAAG,OACbyB,GAAK,KAAOjF,EAAS+E,EAAMd,EAAET,GAAG,MAAQuB,EAAMd,EAAET,GAAG,KAAKA,GAAKuB,EAAMd,EAAET,GAAG,OAGtEuB,EAAMd,EAAET,GAAG,MACbyB,GAAK,KAAOjF,EAAS+E,EAAMd,EAAET,GAAG,KAAOuB,EAAMd,EAAET,GAAG,IAAIA,GAAKuB,EAAMd,EAAET,GAAG,OAOxEwB,EAHED,EAAMd,EAAET,GAAG,KAGTS,EAAET,GAAG,IAILS,EAAET,GAAG,GAGPmB,EAAOnB,GAAGwB,GACGC,GAAL,IAANzB,EAAgB,IAAMmB,EAAOnB,GAAGwB,GAAGR,GAC3B,IAAMG,EAAOnB,GAAGwB,GAG5BC,GADa,IAANzB,EACF,IAAMmB,EAAOnB,IAAI,GAAGgB,GAGpB,IAAMG,EAAOnB,IAAI,IAKf,IAAT4B,EAAE,KAAYH,GAAK,IAAMN,EAAO,IAAI,GAAGH,SAG3CS,EAAI,QAAUN,EAAO,IAAI,GAAGH,GAmB9B,OAhBAU,EAAIvB,EAAiC,KAArBC,EAAIpD,KAAK2E,MAAMvB,IAAW,IAClC,KAAMsB,EAAI,IAAMA,GAIxBD,GADAA,EAAII,EAAcJ,IACZvC,MAAM,EAAG,GAAGgC,cAAgBO,EAAEvC,MAAM,GAC1CuC,GAAK,IAAMC,EAIKF,EAAZD,EAFJG,GAAK,GAEeA,EACTA,EAAI,GAEXP,EAAO,GAAGK,GAAMC,GAAK,IAAMN,EAAO,GAAGK,GAAGR,GACrCS,GAAK,IAAMN,EAAO,IAAI,GAAGH,GAEzBS,GAGHK,EAAY,SAACC,EAAWC,GAC5B,IAAIC,EAAO,EAAOtG,EAASoG,IAAcjF,EAASiF,KAAYE,EAAOF,GACrE,IAAIG,EAAO,GACX,OADmBvG,EAASqG,IAAclF,EAASkF,KAAYE,EAAOF,GAC/DhF,KAAK2E,MAAM3E,KAAKmF,UAAYD,EAAOD,EAAO,IAAMA,GAMnDG,EAAY,SAACrG,EAAG6F,EAAGlC,GAEvB,MAAc,KAANkC,EAAW,GAAK,IAAMA,GAAyB,MAApB7F,EAAEA,EAAEkE,OAAS,GAAaP,EAAE,GAAKA,EAD1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACkC3D,EAAEA,EAAEkE,OAAS,OAOjFoC,EAAe,SAACtF,EAAK0D,GAGzB,SAASmB,EAAEU,EAAIC,GACb,IAAMC,EAAI,CACR,CAAC,GAAI,QAAS,OAAQ,OAAQ,UAAW,QAAS,SAAU,QAAS,UAAW,WAChF,CAAC,UAAW,eAAgB,cAAe,cAAe,gBAAiB,cAAe,eAAgB,cAAe,gBAAiB,iBAC1I,CAAC,GAAI,GAAI,YAAa,YAAa,SAAU,aAAc,cAAe,aAAc,eAAgB,cACxG,CAAC,GAAI,OAAQ,UAAW,UAAW,aAAc,WAAY,YAAa,WAAY,aAAc,cACpG,CAAC,GAAI,QAAS,SAEhB,OAAOA,EAAE,GAAGF,EAAG,KAAiB,IAAVA,EAAG,GAAWE,EAAE,GAAGF,EAAG,IAAME,EAAE,GAAGF,EAAG,KAAOC,EAAKC,EAAE,GAAGF,EAAG,IAAME,EAAE,GAAGF,EAAG,MAI9F,IAAIpC,EAAIC,EAAWpD,EAAK,GAAG2D,WACvBV,EAAI,GACFwC,EAAI,CACR,CAAC,GAAI,QAAS,UAAW,WAAY,WAAY,cAAe,cAAe,cAAe,aAAc,YAAa,YAAa,aACtI,CAAC,IAAK,IAAK,IACX,CAAC,GAAI,IAAK,OAGZ,GAAU,KAANtC,GAAkB,MAANA,EAAW,MAAO,OAEd,KADpBA,EAAIA,EAAEJ,MAAM,oBACN,GAAGG,SAAcC,EAAE,GAAK,KAAOA,EAAE,IACnB,IAAhBA,EAAE,GAAGD,SAAcC,EAAE,GAAK,IAAMA,EAAE,IACtC,IAAK,IAAIsB,EAAKtB,EAAED,OAAS,EAAIuB,GAAK,EAAGA,IACtB,QAATtB,EAAEsB,KACJxB,KAAOS,GAAKe,IAAOtB,EAAED,OAAS,GAAOuB,IAAOtB,EAAED,OAAS,IAAoB,MAAZC,EAAEsB,GAAG,IAA0B,MAAZtB,EAAEsB,GAAG,GAA2BI,EAAE1B,EAAEsB,IAAjBI,EAAE1B,EAAEsB,GAAI,IACzGY,EAAUlC,EAAEsB,GAAIgB,EAAE,GAAGtC,EAAED,OAAS,EAAIuB,GAAKA,IAAOtB,EAAED,OAAS,EAAKuC,EAAE,GAAKA,EAAE,IAAOxC,GAMxF,OAAOA,EAAE,GAAGkB,cAAgBlB,EAAEyC,UAAU,IAIpCC,EAAU,SAACC,EAAQC,GAAT,OAAkBtG,MAAMsG,GAAKC,KAAK,KAAOF,EAAOzD,OAAO0D,IAMjEE,EAAe,SAACC,EAAYC,EAAYC,EAAaC,GACzD,IAKIC,EAAYC,EALVzD,EAAIuD,GAAkB,EACtBzE,EAAIuE,GAAc,GAClBnC,EAAIoC,GAAe,GACzB,OAAKF,GAAcpD,EAAIoD,EAAW9C,OAAe,IAI/B,IAAbxB,EAAEwB,QAAkBY,EAAEZ,OAAS,GAClCkD,EAAaxD,EACbyD,EAAcL,EAAWpC,QAAQE,EAAGlB,IAC1BlB,EAAEwB,OAAS,GAAoB,IAAbY,EAAEZ,QAC9BkD,EAAaJ,EAAWpC,QAAQlC,EAAGkB,GACnCyD,EAAcL,EAAW9C,SAEzBkD,EAAaJ,EAAWpC,QAAQlC,EAAGkB,KACnCyD,EAAcL,EAAWpC,QAAQE,EAAGsC,EAAa1E,EAAEwB,WAChCmD,EAAcD,EAAa1E,EAAEwB,UAG9B,IAAhBkD,IAAsC,IAAjBC,EAA2B,GAC7CL,EAAW7D,MAAMiE,EAAaH,EAAW/C,OAAQmD,KAGpDC,EAAe,SAACC,GAAD,OAASA,EAAIzD,QAAQ,cAAe,KAEnD0D,EAAc,SAACD,GAAD,OAASA,EAAIzD,QAAQ,cAAe,KAElD2D,EAAgB,SAACF,EAAKG,EAAQC,GAAd,OAA8BJ,EAAIxD,MAAM2D,GAAQZ,KAAKa,IAGrEC,EAAU,SAACL,GACf,IAAM3D,EAAI6D,EAAcF,EAAKjI,EAAa,KAC1C,OAAOkI,EAAYF,EAAa1D,KAK5BkC,EAAgB,SAACyB,GACrB,IAAM3D,EAAI6D,EAAcF,EAAKjI,EAAa,KAC1C,OAAOsI,EAAQhE,GAAGE,QAAQ,SAAU,MAGhC+D,EAAa,SAACN,GAElB,OADUE,EAAcF,EAAKjI,EAAa,IACjCwE,QAAQ,WAAY,KAGzBgE,EAAiB,SAACC,GACtB,IAAIC,EAAOzI,OAAOwI,GAAW,IAC7B,GAAa,KAATC,EAAa,MAAO,GACxB,IAAMC,EAAMnC,EAAckC,GAAMjE,MAAM,KAKtC,OAJIkE,EAAI/D,OAAS,IACf8D,EAAOC,EAAI,GAAK,IAAMA,EAAI,GAAG9E,MAAM,EAAG,GAAK,IACvC8E,EAAI,KAAID,GAAQC,EAAI,GAAG9E,MAAM,EAAG,GAAK,MAEpC6E,GAGHE,EAAY,SAAChE,GAGjB,IAFA,IAAItC,EAAS,GACPuG,EAAa,iEACVlE,EAAI,EAAGA,EAAIC,EAAQD,IAC1BrC,GAAUuG,EAAWC,OAAOnH,KAAK2E,MAAM3E,KAAKmF,SAAW+B,EAAWjE,SAEpE,OAAOtC,GAGHyG,EAAyB,SAACC,GAC9B,IAAM5F,EAAI,CACR6F,IAAG,KACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,MACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,MACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,IACHC,IAAG,KACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,KACHC,IAAG,KACHC,IAAG,KACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,IACHC,IAAG,MAEL,OAAOlE,EAAKvE,MAAM,IAAI0I,KAAI,SAACC,GAAD,OAAUhK,EAAEgK,IAASA,KAAM5F,KAAK,KAGtD6F,EAAmB,SAACC,GAExB,IAAMC,GAAQD,GAAY,IAAI7I,MAAM,KAC9B+I,GAAOD,EAAKA,EAAK3I,OAAS,IAAM2I,GAAME,OAAOC,cACnD,OAAQH,EAAK3I,QAAU,EAAI4I,EAAM,IAG7BG,EAAmB,SAACL,GAExB,IAAM3I,EAAI2I,EAASM,YAAY,KAC3BxK,EAAMuB,EAAI,EAAK,GAAK2I,EAASzJ,MAAM,EAAGc,GAEpCwB,GADN/C,EAAI+E,EAAc/E,EAAG,KAAM,MACfwK,YAAY,KAExB,OADYzH,EAAI,EAAK/C,EAAIA,EAAES,MAAMsC,EAAI,EAAG/C,EAAEwB,OAASuB,EAAI,IAKnD0H,EAAc,SAACzN,GACnB,GAAc,OAAVA,GAA4B,KAAVA,QAAiC,IAAVA,EAAuB,CAClE,IAAI0N,EAAM1N,EAAWD,EAASC,KAAQ0N,EAAM3F,EAAc/H,EAAOJ,GAAawE,QAAQ,KAAM,KAAKA,QAAQ,MAAO,KAChH,IAAMuJ,EAAWC,SAASF,EAAK,IAC/B,QAASvN,OAAOI,MAAMoN,IAAaxN,OAAOC,SAASuN,IAErD,OAAO,GAGHE,EAAa,SAAChG,GAClB,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,EAAIrD,OAAQD,IAC9B,GAAIsD,EAAIiG,WAAWvJ,GAAK,IAAK,OAAO,EAEtC,OAAO,GAOHwJ,EAAc,SAACC,EAAKC,EAAMC,EAAWC,GACzC,IAAKvN,EAAQoN,KAASA,EAAIxJ,QAAUvD,EAAkBgN,GAAO,OAAO,EACpE,IAAIlM,GAAM,EACNqM,EAAIH,EACJlO,EAASqO,MACO,IAAdF,IAAsBE,EAAIA,EAAEf,SACH,IAAzBc,IAAiCC,EAAIA,EAAEd,gBAG7C,IAAK,IAAI/I,EAAI,EAAGA,EAAIyJ,EAAIxJ,OAAQD,IAAK,CACnC,IAAIvB,EAAIgL,EAAIzJ,GAKZ,GAJIxE,EAASiD,MACO,IAAdkL,IAAsBlL,EAAIA,EAAEqK,SACH,IAAzBc,IAAiCnL,EAAIA,EAAEsK,gBAEzCtK,IAAMoL,EAAG,CAAErM,GAAM,EAAM,OAE7B,OAAOA,GAMHsM,EAAa,SAACC,EAAMC,EAAMC,GAC9B,IAAKzO,EAASuO,KAAUvO,EAASwO,GAAO,OAAO,EAC/C,IAAKC,IAAWzO,EAASyO,GAAS,OAAOvO,QAAQqO,IAASC,GAC1D,IAAME,EAAOtG,EAAWqG,GAAQlB,cAAclJ,QAAQ,UAAW,KAAKC,MAAM,KACxEF,EAAKmK,EAAMI,EAAKH,EASpB,OARAE,EAAK7K,SAAQ,SAAC+K,GACF,gBAANA,GAA6B,gBAANA,GAA6B,oBAANA,GAA2BxK,EAAKA,EAAGmJ,cAAeoB,EAAKA,EAAGpB,eAC7F,SAANqB,GAAgBxK,EAAK+D,EAAQ/D,GAAKuK,EAAKxG,EAAQwG,IACzC,eAANC,GAAsBxK,EAAKiC,EAAcjC,GAAKuK,EAAKtI,EAAcsI,IAC3D,YAANC,GAAmBxK,EAAKgE,EAAWhE,GAAKuK,EAAKvG,EAAWuG,IAClD,kBAANC,IAAyBxK,EAAKwE,EAAuBxE,GAAKuK,EAAK/F,EAAuB+F,OAG7FX,EAAYU,EAAM,aAAqBxO,SAASkE,EAAGe,QAAQwJ,IACxDzO,QAAQkE,IAAOuK,IAIlBE,GAAa,SAACC,EAAMC,EAAMC,GAC9B,IAAKnO,EAAQiO,GAAO,OAAO,EAC3B,IAAIG,EAAMzL,EAASuL,GAAYlO,EAAQkO,KAAOE,EAAM,CAACF,IAErD,IADA,IAAI/M,GAAM,EACDwC,EAAI,EAAGA,EAAIyK,EAAIxK,OAAQD,IAAK,CAEnC,IADA,IAAI0K,GAAM,EACDlJ,EAAI,EAAGA,EAAI8I,EAAKrK,OAAQuB,IAC/B,GAAI8I,EAAKtK,KAAOyK,EAAIjJ,GAAI,CAAEkJ,GAAM,EAAM,MAExC,IAAKA,EAAK,CAAElN,GAAM,EAAO,OAE3B,IAAmB,IAAfgN,EACF,IAAK,IAAIxK,EAAI,EAAGA,EAAIsK,EAAKrK,OAAQD,IAAK,CAEpC,IADA,IAAI0K,GAAM,EACDlJ,EAAI,EAAGA,EAAIiJ,EAAIxK,OAAQuB,IAC9B,GAAIiJ,EAAIzK,KAAOsK,EAAK9I,GAAI,CAAEkJ,GAAM,EAAM,MAExC,IAAKA,EAAK,CAAElN,GAAM,EAAO,OAG7B,OAAOA,GAIHmN,GAAa,SAAClB,EAAK1O,EAAK6P,GAC5B,IAAKvO,EAAQoN,KAASjN,EAASzB,GAAM,OAAO,EAC5C,IAAIyC,GAAO,EAAGwM,EAAO,GAAUa,EAAO,GACtC,GAAID,GAAkBvO,EAAQuO,GAAiB,CAC7C,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAe3K,OAAQuB,IACrChC,EAAUzE,EAAK6P,EAAepJ,MAAKqJ,EAAKD,EAAepJ,IAAMzG,EAAI6P,EAAepJ,KAEtFwI,EAAOtL,KAAKC,UAAUkM,QAGtBb,EAAOtL,KAAKC,UAAU5D,GAGxB,IAAK,IAAIiF,EAAI,EAAGA,EAAIyJ,EAAIxJ,OAAQD,IAAK,CACnC,IAAM8K,EAAKrB,EAAIzJ,GAAI+K,EAAO,GAAQhB,EAAO,GACzC,GAAIa,GAAkBvO,EAAQuO,GAAiB,CAC7C,IAAK,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAAe3K,OAAQuB,IACrChC,EAAUsL,EAAIF,EAAepJ,MAAKuJ,EAAKH,EAAepJ,IAAMsJ,EAAGF,EAAepJ,KAEpFuI,EAAOrL,KAAKC,UAAUoM,OAEnB,CAEH,IADA,IAAMC,EAAO7L,EAAQpE,GACZyG,EAAI,EAAGA,EAAIwJ,EAAK/K,OAAQuB,IAC3BhC,EAAUsL,EAAIE,EAAKxJ,MAAKuJ,EAAKC,EAAKxJ,IAAMsJ,EAAGE,EAAKxJ,KAEtDuI,EAAOrL,KAAKC,UAAUoM,GAGxB,GAAIhB,IAASC,EAAM,CAAExM,EAAMwC,EAAG,OAEhC,OAAOxC,GAGHyN,GAAU,SAACC,EAAUC,GAEzB,IAAIxN,EAAS,GAIb,GAHItB,EAAQ6O,GAAavN,EAASuN,EAC3BvN,EAAO4B,KAAK2L,GAEf7O,EAAQ8O,GACV,IAAK,IAAI3J,EAAI,EAAGA,EAAI2J,EAAUlL,OAAQuB,IACpC7D,EAAO4B,KAAK4L,EAAU3J,SAIxB7D,EAAO4B,KAAK4L,GAEd,OAAOxN,GAGHyN,GAAY,SAACF,EAAUG,EAAaC,EAAoB3B,EAAWC,GACvE,IAAMjM,EAAS,GACX4N,EAAW,GAAIC,EAAU,GACzBnP,EAAQ6O,GAAaK,EAAWL,EAC7BK,EAAShM,KAAK2L,GAEjB7O,EAAQgP,GAAgBG,EAAUH,EAC/BG,EAAQjM,KAAK8L,GAEpB,IAAK,IAAIrL,EAAI,EAAGA,EAAIuL,EAAStL,OAAQD,IAAK,CACxC,IAAIyL,EAAOF,EAASvL,GAKpB,GAJIxE,EAASiQ,KACP9B,IAAW8B,EAAOA,EAAK3C,QACvBc,GAAsB6B,EAAK1C,gBAE5BuC,GAAuB9P,EAASiQ,IAAkB,KAATA,EAAc,CAE1D,IADA,IAAIC,GAAQ,EACHlK,EAAI,EAAGA,EAAIgK,EAAQvL,OAAQuB,IAAK,CACvC,IAAImK,EAAOH,EAAQhK,GAKnB,GAJIhG,EAASmQ,KACPhC,IAAWgC,EAAOA,EAAK7C,QACvBc,GAAsB+B,EAAK5C,eAE7B4C,IAASF,EAAM,CAAEC,GAAQ,EAAM,OAEhCA,GAAO/N,EAAO4B,KAAKgM,EAASvL,KAGrC,OAAOrC,GAGHiO,GAAe,SAACV,EAAUI,EAAoB3B,EAAWC,GAE7D,IADA,IAAMjM,EAAS,GACNqC,EAAI,EAAGA,EAAIkL,EAASjL,OAAQD,IAAK,CACxC,IAAIyL,EAAOP,EAASlL,GAKpB,GAJIxE,EAASiQ,KACP9B,IAAW8B,EAAOA,EAAK3C,QACvBc,GAAsB6B,EAAK1C,gBAE5BuC,GAA+B,KAATG,EAAa,CAEtC,IADA,IAAIC,GAAQ,EACHlK,EAAI,EAAGA,EAAI7D,EAAOsC,OAAQuB,IAAK,CACtC,IAAImK,EAAOhO,EAAO6D,GAKlB,GAJIhG,EAASmQ,KACPhC,IAAWgC,EAAOA,EAAK7C,QACvBc,GAAsB+B,EAAK5C,eAE7B4C,IAASF,EAAM,CAAEC,GAAQ,EAAM,OAEhCA,GAAO/N,EAAO4B,KAAK2L,EAASlL,KAGrC,OAAOrC,GAOHkO,GAAW,SAACvI,EAAKwI,EAAYC,GACjC,IAAKzI,IAAQ9H,EAAS8H,GAAM,OAAO,EACnC,IAKM0I,EADOxI,EAAcF,EAAIzD,QAAQ,OAAQ,IAAIA,QAAQ,IAAK,KAAMxE,EAAa,IAC9D4Q,MALV,2BAMX,IAAKD,EAAQ/L,OAAQ,OAAO,EAC5B,IACE,IAAIzC,EAAM5B,OAAOoQ,EAAQ,IAGzB,OAFID,IAAUvO,EAAMR,KAAKkP,IAAI1O,IACzBsO,IAAYtO,EAAM2C,EAAW3C,EAAKsO,IAC/BtO,EAET,MAAOgF,GACL,OAAO,IAKL2J,GAAmB,SAAC7I,EAAKwI,EAAYC,GACzC,IAAKvQ,EAAS8H,GAAM,OAAO,KAC3B,IAMM0I,EANOxI,EAAcF,EAAIzD,QAAQ,IAAK,KAAMxE,GAM7B4Q,MALV,mBAOX,GAAI5P,EAAQ2P,GAAU,CACpB,IAAK,IAAIhM,EAAI,EAAGA,EAAIgM,EAAQ/L,OAAQD,IAClCgM,EAAQhM,GAAK6L,GAASG,EAAQhM,IAC1B+L,IAAUC,EAAQhM,GAAKhD,KAAKkP,IAAIF,EAAQhM,KACxC8L,IAAYE,EAAQhM,GAAKG,EAAW6L,EAAQhM,GAAI8L,IAEtD,OAAOE,EAET,OAAO,MAIHI,GAAe,SAACC,EAAYC,EAAUR,EAAYC,GACtD,IAAKlP,EAAYwP,GAAa,OAAO,EACrC,IAAIE,EAAS,EACPC,EAAaL,GAAiBE,EAAYP,EAAYC,GAK5D,OAJI1P,EAAQmQ,KACO,IAAbF,EAAkBC,EAASC,EAAWA,EAAWvM,OAAS,GACrDnD,EAASwP,IAAa3Q,EAAS6Q,EAAWF,EAAW,MAAOC,EAASC,EAAWF,EAAW,KAE/FC,GAOHE,GAAiB,SAACC,EAAMC,GAC5B,IAAIC,EAAM,KAOV,OAPoBpR,EAASmR,KAAWC,EAAMD,IAElC,OAARC,EACK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAErC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAElCF,EAAKG,WAGbC,GAAe,SAACC,EAAQC,EAAaC,GAEzC,IAAK9Q,EAAO4Q,GAAS,MAAO,GAC5B,IAAIG,EAAO,aAAkB1R,EAASwR,IAAgC,KAAhBA,IAAoBE,EAAOF,GACjF,IAAMG,EAASnO,EAAS+N,GACpBE,GAAaE,EAAOC,QAAQD,EAAOlO,UAA0B,IAAdgO,EAAsB,IAEzE,IAAMI,GAAaF,EAAOG,WAAa,EACjCC,GAAYJ,EAAOK,UACnBC,EAAKN,EAAOO,cACZC,GAAQN,EAAY,GAAK,IAAM,IAAMA,EACrCO,GAAML,EAAW,GAAK,IAAM,IAAMA,EACpCM,EAAI,IAAMV,EAAOW,WAAYD,EAAIA,EAAE3O,OAAO,GAC9C,IAAIoB,EAAI,IAAM6M,EAAOY,aAAczN,EAAIA,EAAEpB,OAAO,GAChD,IAAIS,EAAI,IAAMwN,EAAOa,aAAcrO,EAAIA,EAAET,OAAO,GAEhD,IAAI+O,EAAU,GACd,OAAQf,GACN,IAAK,aACHe,EAAUL,EAAK,IAAMD,EAAO,IAAMF,EAClC,MACF,IAAK,mBACHQ,EAAUL,EAAK,IAAMD,EAAO,IAAMF,EAAK,IAAMI,EAAI,IAAMvN,EACvD,MACF,IAAK,sBACH2N,EAAUL,EAAK,IAAMD,EAAO,IAAMF,EAAK,IAAMI,EAAI,IAAMvN,EAAI,IAAMX,EACjE,MACF,IAAK,sBACHsO,EAAUR,EAAK,IAAME,EAAO,IAAMC,EAAK,IAAMC,EAAI,IAAMvN,EAAI,IAAMX,EACjE,MACF,IAAK,mBACHsO,EAAUR,EAAK,IAAME,EAAO,IAAMC,EAAK,IAAMC,EAAI,IAAMvN,EACvD,MACF,IAAK,yBACH2N,EAAUxB,GAAeU,GAAU,IAAMM,EAAK,IAAME,EAAO,IAAMC,EAAK,IAAMC,EAAI,IAAMvN,EAAI,IAAMX,EAChG,MACF,IAAK,sBACHsO,EAAUxB,GAAeU,GAAU,IAAMM,EAAK,IAAME,EAAO,IAAMC,EAAK,IAAMC,EAAI,IAAMvN,EACtF,MACF,IAAK,gBACH2N,EAAUxB,GAAeU,GAAU,IAAMS,EAAK,IAAMD,EAAO,IAAMF,EACjE,MACF,IAAK,sBACHQ,EAAUxB,GAAeU,GAAU,IAAMS,EAAK,IAAMD,EAAO,IAAMF,EAAK,IAAMI,EAAI,IAAMvN,EACtF,MACF,IAAK,yBACH2N,EAAUxB,GAAeU,GAAU,IAAMS,EAAK,IAAMD,EAAO,IAAMF,EAAK,IAAMI,EAAI,IAAMvN,EAAI,IAAMX,EAChG,MACF,IAAK,WACHsO,EAAUJ,EAAI,IAAMvN,EAAI,IAAMX,EAC9B,MACF,IAAK,QACHsO,EAAUJ,EAAI,IAAMvN,EACpB,MACF,QACE2N,EAAUR,EAAK,IAAME,EAAO,IAAMC,EAGtC,OAAOK,GAGHC,GAAiB,SAACC,EAASnB,EAAaC,GAC5C,IAAKzR,EAAS2S,GAAU,OAAO,KAC/B,IAAIjB,EAAO,aAAkB1R,EAASwR,IAAgC,KAAhBA,IAAoBE,EAAOF,GACjF,IAAIY,EAAID,EAAMF,EAAIW,EAAMC,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAC7C,OAAQrB,GACN,IAAK,aAEHU,IADAQ,EAAOD,EAAQrO,MAAM,MACV,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GACX,MACF,IAAK,mBACL,IAAK,sBACH,IAAMI,EAAO1L,EAAaqL,EAAS,GAAI,KACvC,GAAa,KAATK,EAAa,CAEfZ,IADAQ,EAAOD,EAAQrO,MAAM,MACV,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GACX,MAGA,IAAMK,EAAO3L,EAAaqL,EAAS,IAAK,IAExCP,IADAQ,EAAOI,EAAK1O,MAAM,MACP,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GACX,IAAMM,EAAQD,EAAK3O,MAAM,KACzBuO,GAAMK,EAAM,GACRA,EAAMzO,OAAS,IAAGqO,GAAMI,EAAM,IAC9BA,EAAMzO,OAAS,IAAGsO,GAAMG,EAAM,IAEpC,MAEF,IAAK,sBACH,IAAMF,EAAO1L,EAAaqL,EAAS,GAAI,KACvC,GAAa,KAATK,EAAa,CAEfZ,IADAQ,EAAOD,EAAQrO,MAAM,MACV,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GACX,MAGA,IAAMK,EAAO3L,EAAaqL,EAAS,IAAK,IAExCP,IADAQ,EAAOI,EAAK1O,MAAM,MACP,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GACX,IAAMM,EAAQD,EAAK3O,MAAM,KACzBuO,GAAMK,EAAM,GACRA,EAAMzO,OAAS,IAAGqO,GAAMI,EAAM,IAC9BA,EAAMzO,OAAS,IAAGsO,GAAMG,EAAM,IAEpC,MAEF,QAEEd,IADAQ,EAAOD,EAAQrO,MAAM,MACV,GACX6N,GAAQS,EAAK,GAAK,EAClBX,GAAMW,EAAK,GAIf,IAAIO,EAAO,EACX,IACEA,EAAO,IAAIvS,KAAKqR,EAAIE,EAAMC,EAAIS,EAAIC,EAAIC,GAClCtB,GAAa0B,EAAKvB,QAAQuB,EAAK1P,UAA0B,IAAdgO,EAAsB,IACrE,MAAO2B,IAGT,OAAOD,GAGHE,GAAkB,SAACC,EAAIC,GAC3B,IACE,IAAMC,EAAWF,EAAG7P,UAAY8P,EAAG9P,UAEnC,OADiBjC,KAAKiS,KAAKD,EAAW,OAAsB,EAG9D,MAAOJ,GAEL,OAAO,OAILM,GAAoB,SAACC,GACzB,IAAK,sCAAsC/R,KAAK+R,GAAY,OAAO,EACnE,IAAMrP,EAAQqP,EAAUrP,MAAM,UAExBsP,EAAQnT,WAAW6D,EAAM,IACzBuP,EAAMpT,WAAW6D,EAAM,IACvBwP,EAAOrT,WAAW6D,EAAM,IACxByP,EAAStT,WAAW6D,EAAM,IAC1B0P,EAASvT,WAAW6D,EAAM,IAChC,OAAOwP,EAAO,IAAMC,EAAS,IAAMC,EAAS,IAAMJ,EAAQ,IAAMC,EAAM,IAGlEI,GAAoB,SAACC,GACzB,IAAMC,EAAW3S,KAAK2E,MAAM+N,EAAS,OAE/BE,EAAY,IAAIxT,KADO,MAAXuT,EACqB,KACjCE,EAAiBH,EAAS1S,KAAK2E,MAAM+N,GAAU,KACjDI,EAAgB9S,KAAK2E,MAAM,MAAQkO,GACjCE,EAAUD,EAAgB,GAChCA,GAAiBC,EACjB,IAAMC,EAAQhT,KAAK2E,MAAMmO,EAAgB,MACnCG,EAAUjT,KAAK2E,MAAMmO,EAAgB,IAAM,GACjD,OAAO,IAAI1T,KAAKwT,EAAUlC,cAAekC,EAAUtC,WAAYsC,EAAUpC,UAAWwC,EAAOC,EAASF,IAGhGG,GAAoB,SAACR,GACzB,IAAMS,EAAKnR,EAAS0Q,GACpB,OAAKvT,EAAOgU,IACZA,EAAG/C,QAAQ+C,EAAGlR,UAAa,OACnBrD,OAAOuU,GAAM,MAAY,OAFT,GAMpBC,GAA4B,SAACC,EAAcrD,GAC/C,IAAKqD,IAAiB1U,EAAS0U,GAAe,MAAO,GACrD,IAAMnD,EAAOF,GAAe,QACxBsD,EAAOD,GAAgB,EACrBE,EAAMvT,KAAK2E,MAAM0O,EAAe,IAAO,GAAK,IAClDC,GAAc,IAANC,EAAa,GAAK,GAC1B,IAAMC,EAAMxT,KAAK2E,MAAM2O,EAAO,IAAO,IACrCA,GAAc,IAANE,EAAa,GACrB,IAAMC,EAAMzT,KAAK2E,MAAM2O,EAAO,KAG9B,OAFAA,GAAc,IAANG,EACI/N,EAAQ6N,EAAK,GAAK,IAAM7N,EAAQ8N,EAAK,IAAe,aAATtD,EAAsB,IAAMxK,EAAQ+N,EAAK,GAAK,KAKjGC,GAAmB,SAACC,EAAS3D,GACjC,IAAK2D,IAAYnV,EAASmV,KAAc,uBAAwBvT,KAAKuT,GAAU,OAAO,EACtF,IAAMC,EAAKzE,GAAiBwE,EAAS,GAAG,GACxC,GAAIC,EAAG3Q,OAAS,EAAG,OAAO,EAC1B,IAAIzC,EAAc,IAARoT,EAAG,GAAY,GAAK,GAAK,GAGnC,OAFApT,GAAe,IAARoT,EAAG,GAAY,GAAK,GACP,UAAhB5D,GAAyC,IAAd4D,EAAG3Q,SAAczC,GAAe,IAARoT,EAAG,GAAY,IAC/DpT,GAOHqT,GAAe,SAAClR,GAEpB,OADamR,OAAOC,KAAKpR,GACbe,SAAS,WAGjBsQ,GAAe,SAACrR,EAAGsR,GAEvB,OADaH,OAAOC,KAAKpR,EAAG,UAChBe,SAASuQ,GAAY,SAM7BC,GAAmB,WACvB,IAAI1T,EAAM,MACV,GAAI9C,GAAUA,EAAOyW,OAAQ,CAC3B,IAAMC,EAAQ5N,EAAc9I,EAAOyW,OAAOxI,SAAU,KAAM,KAAK7I,MAAM,KACrEtC,EAAM4T,EAAMA,EAAMnR,OAAS,GACvBmR,EAAMnR,OAAS,IAAGzC,EAAM4T,EAAMA,EAAMnR,OAAS,GAAK,IAAMmR,EAAMA,EAAMnR,OAAS,QAE9E,CACH,IAAMoR,EAAW/V,QAAQ,IAAIgW,OAASC,OAAO1R,QAAQ,UAAW,IAAIC,MAAM,MAAO0R,EAAM,GACvFH,EAAShS,SAAQ,SAACoS,GAASD,EAAIjS,KAAKkS,EAAG3I,OAAOjJ,QAAQ,SAAU,QAEhE,IAAK,IAAIG,EAAI,EAAGA,EAAIwR,EAAIvR,OAAQD,IAC9B,GAAK,cAAe5C,KAAKoU,EAAIxR,IAAK,CAChCxC,EAAMgU,EAAIxR,EAAI,IAAMwR,EAAIxR,GACxB,MAGJ,IAAM0R,EAAS,iCACXA,EAAOtU,KAAKI,KAAMA,EAAMA,EAAIyO,MAAMyF,GAAQ,IAEhD,OAAOlU,GAGHmU,GAAM,SAANA,EAAOzH,GAAD,OAAU,IAAI0H,SAAQ,SAACC,EAASC,GAG1C,IAAI1H,EAAIpL,EAASkL,GAEjB,GAAI1O,EAAS4O,GAAMA,EAAI,CAAE2H,QAAS7H,EAAM8H,QAAS,OAAQC,WAAW,EAAMC,QAAQ,QAC7E,IAAK1V,EAAS4N,GAAwE,YAAlE0H,EAAO,IAAIR,MAAM,gDAG1C,GADIlH,EAAE+H,MAAQ/H,EAAE2H,UAAS3H,EAAE2H,QAAU3H,EAAE+H,KAClC/H,EAAE2H,SAAyB,KAAd3H,EAAE2H,QAApB,CAGA,GAFIvW,EAAS4O,EAAE2H,WAAa3H,EAAE2H,QAAQK,WAAW,kBAAiBhI,EAAE2H,QAAU,eAAiB3H,EAAE2H,UAE5F3H,EAAEiI,OACL,IAAMjI,EAAEiI,OAASV,EAAIU,OAAQjI,EAAEiI,OAAS/W,OAAO8O,EAAEiI,QACjD,MAAOC,GAAQlI,EAAEiI,OAAS,MAExBjI,EAAEiI,OAAOpS,OAAS,MAAKmK,EAAEiI,OAASjI,EAAEiI,OAAOnT,MAAM,EAAG,KAAO,QAG/DkL,EAAE4H,QAAU5H,EAAE4H,SAAW,OACzB5H,EAAE1P,OAAS0P,EAAE1P,QAAUwW,KACvB9G,EAAEmI,SAAWnI,EAAEmI,UAAY,IAAInW,MAGd,IAAbgO,EAAE8H,QAAmB9T,OAAOoU,EAC9BpU,OAAOoU,EAAEC,KAAK,CACZC,KAAM,OACN/D,KAAMjQ,KAAKC,UAAUyL,GACrBuI,YAAa,mBACbC,IAAK,qBACJC,MAAK,SAACC,GACHA,EAAKC,SAAQ3I,EAAE2I,OAASD,EAAKC,SACQ,IAAhB3I,EAAE6H,gBAA6C,IAAhB7H,EAAE6H,YACtC,UAAd7H,EAAE4H,QAAuBgB,QAAQC,MAAM7I,EAAE2H,SACtCiB,QAAQrB,IAAIvH,IAErByH,GAAQ,MACPqB,MAAK,SAACZ,GACPU,QAAQrB,IAAIW,GAAOR,EAAO,IAAIR,MAAM,sBAIG,IAAhBlH,EAAE6H,gBAA6C,IAAhB7H,EAAE6H,YACtC,UAAd7H,EAAE4H,QAAuBgB,QAAQC,MAAM7I,GACpC4I,QAAQrB,IAAIvH,IAErByH,GAAQ,SArC4BC,EAAO,IAAIR,MAAM,4BA0CnD6B,GAAkB,SAACC,EAAUC,GACjC,IAAM7V,EAAM,CAACG,QAAQ,EAAO2V,QAAS,GAAIC,OAAQ,GAAIF,OAAAA,EAAQ5X,WAAO+X,GACpE,GAAIJ,GAAYA,EAASE,QAAS,S,25BAAA,CAEbF,EAASE,QAAQG,WAFJ,IAEhC,2BAA+C,KAApCC,EAAoC,QACzCA,EAAKzT,SACPzC,EAAI8V,QAAQ/T,KAAKmU,EAAK,IAAKlW,EAAI+V,OAAOhU,KAAKmU,EAAK,IAC5CL,GAAqB,KAAXA,EACRK,EAAK,GAAG3K,gBAAkBsK,EAAOtK,gBAAiBvL,EAAI6V,OAASK,EAAK,GAAIlW,EAAI/B,MAAQiY,EAAK,GAAIlW,EAAIG,QAAS,GAG9GH,EAAIG,QAAS,IATa,+BAclC,OAAOH,GAGHmW,GAAQ,SAACC,GAAD,OAAQ,IAAIhC,SAAQ,SAACC,GACjCgC,WAAWhC,EAAS+B,OAGhBE,GAAY,SAACC,EAAIC,GACrB,IAAIxW,GAAM,EAAO,IAAKuW,IAAOvY,EAASuY,KAAQC,EAAM,OAAOxW,EAC3D,GAAIhC,EAASwY,GAAS,OAAOtY,QAAQqY,IAAOC,GAC5C,GAAIrX,EAASqX,GAA6B,OAApBA,EAAKC,UAAY,EAAWD,EAAK5W,KAAK2W,GAC5D,GAAI1X,EAAQ2X,GACV,IAAK,IAAIhU,EAAI,EAAGA,EAAIgU,EAAK/T,OAAQD,IAAK,CACpC,GAAIxE,EAASwY,EAAKhU,KAAO+T,IAAOC,EAAM,CAAExW,GAAM,EAAM,MACpD,GAAIb,EAASqX,EAAKhU,MAAOgU,EAAKhU,GAAGiU,UAAY,EAAOD,EAAKhU,GAAG5C,KAAK2W,IAAK,CAAEvW,GAAM,EAAM,OAGxF,OAAOA,GAOT9C,EAAOD,QAAU,CACfkX,IAAAA,GACAnW,SAAAA,EACAG,SAAAA,EACAG,YAAAA,EACAI,UAAAA,EACAC,OAAAA,EACAE,QAAAA,EACAE,WAAAA,EACAC,SAAAA,EACAE,kBAAAA,EACAC,SAAAA,EACAE,YAAAA,EACAK,eAAAA,EACAI,aAAAA,EACAW,WAAAA,EACAwB,YAAAA,EACAT,SAAAA,EACAG,QAAAA,EACAK,UAAAA,EACAjB,UAAAA,EACAM,YAAAA,EACAiE,aAAAA,EACA+I,SAAAA,GACAxI,aAAAA,EACAE,YAAAA,EACAI,QAAAA,EACA9B,cAAAA,EACA+B,WAAAA,EACAJ,cAAAA,EACAK,eAAAA,EACAI,UAAAA,EACAG,uBAAAA,EACAsE,iBAAAA,EACAM,iBAAAA,EACAE,YAAAA,EACAiD,iBAAAA,GACAC,aAAAA,GACAtC,WAAAA,EACAR,WAAAA,EACAE,YAAAA,EACAyB,QAAAA,GACAG,UAAAA,GACAQ,aAAAA,GACAvB,WAAAA,GACAM,WAAAA,GACA7N,SAAAA,EACAqD,WAAAA,EACAE,kBAAAA,EACAE,cAAAA,EACAO,YAAAA,EACAuB,aAAAA,EACAD,UAAAA,EACAN,UAAAA,EACAY,QAAAA,EACAoK,aAAAA,GACAoB,eAAAA,GACAW,gBAAAA,GACAY,kBAAAA,GACAS,kBAAAA,GACAhB,kBAAAA,GACAkB,0BAAAA,GACAM,iBAAAA,GACAG,aAAAA,GACAG,aAAAA,GACAmC,gBAAAA,GACAQ,MAAAA,GACAG,UAAAA,K,8FAruCuB,EAAnBI,mBAAAA,qD,WACA7Y,EAAAA,cAAAA,qD,WAIAG,EAAAA,WAAAA,qD,WAEAG,EAAAA,WAAAA,qD,WAEAG,EAAAA,cAAAA,qD,WAEAI,EAAAA,YAAAA,qD,WAEAC,EAAAA,SAAAA,qD,WAEAE,EAAAA,UAAAA,qD,WAEAE,EAAAA,aAAAA,qD,WAEAC,EAAAA,WAAAA,qD,WAEAE,EAAAA,oBAAAA,qD,WAEAC,EAAAA,WAAAA,qD,WAEAE,EAAAA,cAAAA,qD,WAEAC,EAAAA,WAAAA,qD,WAOAI,EAAAA,iBAAAA,qD,WAIAI,EAAAA,eAAAA,qD,WAOAW,EAAAA,aAAAA,qD,WAYAM,EAAAA,YAAAA,qD,WAUAM,EAAAA,cAAAA,qD,WAWAG,EAAAA,WAAAA,qD,WAkBAG,EAAAA,UAAAA,qD,WASAK,EAAAA,YAAAA,qD,WAKAC,EAAAA,cAAAA,qD,WAoBAU,EAAAA,aAAAA,qD,WAOAE,EAAAA,oBAAAA,qD,WAKAE,EAAAA,gBAAAA,qD,WAgCAO,EAAAA,cAAAA,qD,WA8LAgB,EAAAA,YAAAA,qD,WASAM,EAAAA,YAAAA,qD,WASAC,EAAAA,eAAAA,qD,WAwCAK,EAAAA,UAAAA,qD,WAMAI,EAAAA,eAAAA,qD,WAwBAO,EAAAA,eAAAA,qD,WAEAE,EAAAA,cAAAA,qD,WAEAC,EAAAA,gBAAAA,qD,WAGAG,EAAAA,UAAAA,qD,WAOA9B,EAAAA,gBAAAA,qD,WAKA+B,EAAAA,aAAAA,qD,WAKAC,EAAAA,iBAAAA,qD,WAWAI,EAAAA,YAAAA,qD,WASAG,EAAAA,yBAAAA,qD,WAwEAsE,EAAAA,mBAAAA,qD,WAOAM,EAAAA,mBAAAA,qD,WAWAE,EAAAA,cAAAA,qD,WASAI,EAAAA,aAAAA,qD,WAWAE,EAAAA,cAAAA,qD,WAuBAM,EAAAA,aAAAA,qD,WAkBAO,GAAAA,aAAAA,qD,WAwBAM,GAAAA,aAAAA,qD,WAkCAM,GAAAA,UAAAA,qD,WAiBAG,GAAAA,YAAAA,qD,WA+BAQ,GAAAA,eAAAA,qD,WA4BAC,GAAAA,WAAAA,qD,WAqBAM,GAAAA,mBAAAA,qD,WAsBAC,GAAAA,eAAAA,qD,WAeAK,GAAAA,iBAAAA,qD,WAWAK,GAAAA,eAAAA,qD,WA6DAoB,GAAAA,iBAAAA,qD,WA0EAW,GAAAA,kBAAAA,qD,WAYAK,GAAAA,oBAAAA,qD,WAYAO,GAAAA,oBAAAA,qD,WAaAS,GAAAA,oBAAAA,qD,WAQAE,GAAAA,4BAAAA,qD,WAeAM,GAAAA,mBAAAA,qD,WAcAG,GAAAA,eAAAA,qD,WAKAG,GAAAA,eAAAA,qD,WAQAE,GAAAA,mBAAAA,qD,WAuBAS,GAAAA,MAAAA,qD,WAmDAwB,GAAAA,kBAAAA,qD,WAmBAQ,GAAAA,QAAAA,qD,WAIAG,GAAAA,YAAAA,uD,4FClpCFK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBb,IAAjBc,EACH,OAAOA,EAAa7Z,QAGrB,IAAIC,EAASyZ,EAAyBE,GAAY,CACjDE,GAAIF,EACJG,QAAQ,EACR/Z,QAAS,IAUV,OANAga,EAAoBJ,GAAU3Z,EAAQA,EAAOD,QAAS2Z,GAGtD1Z,EAAO8Z,QAAS,EAGT9Z,EAAOD,Q,OCxBf2Z,EAAoBM,IAAM,SAASha,GAGlC,OAFAA,EAAOia,MAAQ,GACVja,EAAOka,WAAUla,EAAOka,SAAW,IACjCla,GCAkB0Z,EAAoB,K","sources":["webpack://rz/webpack/universalModuleDefinition","webpack://rz/./node_modules/@babel/runtime/helpers/typeof.js","webpack://rz/./serverside/myapps/rz.js","webpack://rz/webpack/bootstrap","webpack://rz/webpack/runtime/node module decorator","webpack://rz/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rz\"] = factory();\n\telse\n\t\troot[\"rz\"] = factory();\n})(self, function() {\nreturn ","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/* constants */\r\n\r\nconst enableConsoleLog = true;\r\nconst unknowSpase = String.fromCharCode(160); // \"неразрывный пробел\" или &nbsp;\r\n\r\n/* Check Types */\r\n\r\nconst isString = (value) => Boolean(typeof value === \"string\" || value instanceof String);\r\n\r\nconst isNumber = (value) => Boolean(typeof value === \"number\" && Number.isFinite(value));\r\n\r\nconst canbeNumber = (n) => Boolean(!Number.isNaN(parseFloat(n)) && Number.isFinite(n));\r\n\r\nconst isBoolean = (value) => Boolean(typeof value === \"boolean\");\r\n\r\nconst isDate = (value) => Boolean(value instanceof Date);\r\n\r\nconst isArray = (value) => Boolean(value && typeof value === \"object\" && value.constructor === Array);\r\n\r\nconst isFunction = (value) => Boolean(typeof value === \"function\");\r\n\r\nconst isObject = (value) => Boolean(value && typeof value === \"object\" && value.constructor === Object);\r\n\r\nconst isUndefinedOrNull = (value) => Boolean(typeof value === \"undefined\" || value === null);\r\n\r\nconst isRegExp = (value) => Boolean(value && typeof value === \"object\" && value.constructor === RegExp);\r\n\r\nconst isRealValue = (value) => Boolean(value && value !== \"null\" && value !== \"undefined\" && value !== \"\");\r\n\r\nconst numIsInt = (num) => Boolean(Math.round(num) === num);\r\n\r\n/* ============================ */\r\n/*           Web-page           */\r\n/* ============================ */\r\n\r\n/* eslint-disable max-len */\r\nconst isMobileDevice = (userAgent) => Boolean(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(userAgent)\r\n|| /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\\\-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(userAgent.substr(0, 4)));\r\n/* eslint-enable max-len */\r\n\r\nconst documentSize = (documnt) => {\r\n  const ans = {width: 0, height: 0, result: false};\r\n  const dcm = documnt || document;\r\n  if (dcm && dcm.documentElement && dcm.documentElement.scrollWidth) { ans.width = dcm.documentElement.scrollWidth; ans.height = dcm.documentElement.scrollHeight; ans.result = true }\r\n  return ans;\r\n};\r\n\r\nconst windowSize = (windw) => {\r\n  const ans = {width: 0, height: 0, result: false};\r\n  const wnd = windw || window;\r\n  if (wnd && wnd.innerWidth && wnd.innerHeight) { ans.width = wnd.innerWidth; ans.height = wnd.innerHeight; ans.result = true }\r\n  return ans;\r\n};\r\n\r\n/* ============================ */\r\n/*            Objects           */\r\n/* ============================ */\r\n\r\n// Cloning objects\r\nconst objToJSON = (sourceObj) => {\r\n  let a = {};\r\n  try {\r\n    a = JSON.stringify(sourceObj);\r\n  } catch (err) {\r\n    a = null;\r\n  }\r\n  return a;\r\n};\r\n\r\nconst objFromJSON = (sourceJSON) => {\r\n  let a = {};\r\n  try {\r\n    a = JSON.parse(sourceJSON);\r\n  } catch (err) {\r\n    a = null;\r\n  }\r\n  return a;\r\n};\r\n\r\n// can clone Objects and Dates and Strings and Numbers!\r\nconst objClone = (sourceObj) => {\r\n  let ans = null;\r\n  if (isDate(sourceObj)) {\r\n    ans = new Date(sourceObj.getTime());\r\n  }\r\n  else if (isArray(sourceObj)) {\r\n    ans = sourceObj.slice(0);\r\n  }\r\n  else if (isObject(sourceObj)) {\r\n    const a = objToJSON(sourceObj);\r\n    ans = objFromJSON(a);\r\n  }\r\n  else if (isNumber(sourceObj) || isString(sourceObj) || isBoolean(sourceObj)) {\r\n    ans = sourceObj;\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst objKeys = (obj) => {\r\n  const ans = [];\r\n  if (!isObject(obj)) return ans;\r\n  Object.keys(obj).forEach((key) => {\r\n    ans.push(key);\r\n  });\r\n  return ans;\r\n};\r\n\r\nconst objHasKey = (obj, key) => {\r\n  if (!isObject(obj) || !isString(key)) return false;\r\n  return Boolean(key in obj);\r\n};\r\n\r\nconst objByString = (o, s) => {\r\n  let s1 = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\r\n  s1 = s1.replace(/^\\./, \"\"); // strip a leading dot\r\n  const a = s1.split(\".\");\r\n  let o1 = objClone(o);\r\n  for (let i = 0, n = a.length; i < n; i++) {\r\n    const k = a[i];\r\n    if (k in o1) {\r\n      o1 = o1[k];\r\n      // if (~s.indexOf(\"elements\")) console.log(o1);\r\n    }\r\n    else { return null }\r\n  }\r\n  return o1;\r\n};\r\n\r\n/* ============================ */\r\n/* Numbers */\r\n/* ============================ */\r\n\r\nconst numRoundTo = (num, n) => {\r\n  let x = 0;\r\n  if (isNumber(n) && numIsInt(n) && n >= -6 && n <= 6) x = n;\r\n  x = 10 ** x;\r\n  return Math.round(num * x) / x;\r\n};\r\n\r\nconst numRoundToNearest = (num, m) => {\r\n  if (isNumber(m)) return Number(num % m ? num + m - (num % m) : num);\r\n  return false;\r\n};\r\n\r\nconst numToFloatStr = (num, n, triads) => {\r\n  let s, d = 0, k, m;\r\n  if (isNumber(n) && numIsInt(n) && n >= -6 && n <= 6) d = n;\r\n  s = numRoundTo(num, d).toString().replace(\".\", \",\");\r\n\r\n  if (d > 0) {\r\n    k = s.indexOf(\",\");\r\n    if (k === -1) { s += \",\" + \"0\".repeat(d) }\r\n    else {\r\n      const a = s.slice(0, k - 1), b = s.slice(k + 1, s.length - k - 1);\r\n      if (d > 0 && b.length > d) {\r\n        s = a + \",\" + b.slice(0, d);\r\n      }\r\n      else {\r\n        s += \"0\".repeat(d - (s.length - k - 1));\r\n      }\r\n      s += \"0\".repeat(d - (s.length - k - 1));\r\n    }\r\n  }\r\n\r\n  k = s.indexOf(\",\"); if (k === -1) { k = s.length }\r\n  m = s.indexOf(\"-\");\r\n  if (m === -1) { m = 0 } else { m = 1 }\r\n\r\n  if (triads !== false) {\r\n    for (d = k - 3; d > m; d -= 3) {\r\n      s = s.slice(0, d) + \" \" + s.slice(d, s.length - d + 1);\r\n    }\r\n  }\r\n  return s;\r\n};\r\n\r\nconst numToPhrase = (num, c) => {\r\n  // let lng = \"ru\"; if (isString(lngparam)) lng = lngparam;\r\n  const x = numRoundTo(num, 2);\r\n  if (x < 0 || x > 999999999999999) return false;\r\n\r\n  let currency = \"RUB\"; if (isString(c)) currency = c.trimAll().toUpperCase();\r\n  if (currency !== \"RUB\" && currency !== \"USD\" && currency !== \"EUR\") return false;\r\n\r\n  const groups = [];\r\n  groups[0] = []; groups[1] = []; groups[2] = []; groups[3] = []; groups[4] = []; groups[9] = [];\r\n\r\n  // рубли по умолчанию\r\n  groups[0][-1] = { RUB: \"рублей\", USD: \"долларов США\", EUR: \"евро\" };\r\n  // исключения\r\n  groups[0][1] = { RUB: \"рубль\", USD: \"доллар США\", EUR: \"евро\" };\r\n  groups[0][2] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n  groups[0][3] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n  groups[0][4] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n\r\n  // тысячи\r\n  groups[1][-1] = \"тысяч\"; // по умолчанию\r\n  // исключения\r\n  groups[1][1] = \"тысяча\";\r\n  groups[1][2] = \"тысячи\";\r\n  groups[1][3] = \"тысячи\";\r\n  groups[1][4] = \"тысячи\";\r\n\r\n  // миллионы\r\n  groups[2][-1] = \"миллионов\"; // по умолчанию\r\n  // исключения\r\n  groups[2][1] = \"миллион\";\r\n  groups[2][2] = \"миллиона\";\r\n  groups[2][3] = \"миллиона\";\r\n  groups[2][4] = \"миллиона\";\r\n\r\n  // миллиарды\r\n  groups[3][-1] = \"миллиардов\"; // по умолчанию\r\n  // исключения\r\n  groups[3][1] = \"миллиард\";\r\n  groups[3][2] = \"миллиарда\";\r\n  groups[3][3] = \"миллиарда\";\r\n  groups[3][4] = \"миллиарда\";\r\n\r\n  // триллионы\r\n  groups[4][-1] = \"триллионов\"; // по умолчанию\r\n  // исключения\r\n  groups[4][1] = \"триллион\";\r\n  groups[4][2] = \"триллиона\";\r\n  groups[4][3] = \"триллиона\";\r\n  groups[4][4] = \"триллиона\";\r\n\r\n  // копейки\r\n  groups[9][-1] = { RUB: \"копеек\", USD: \"центов\", EUR: \"центов\" }; // по умолчанию\r\n  // исключения\r\n  groups[9][1] = { RUB: \"копейка\", USD: \"цент\", EUR: \"цент\" };\r\n  groups[9][2] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n  groups[9][3] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n  groups[9][4] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n\r\n  // цифры и числа\r\n  // либо просто строка, либо 4 строки в хэше\r\n  const names = [];\r\n  names[1] = {\r\n    0: \"один\", 1: \"одна\", 2: \"один\", 3: \"один\", 4: \"один\"\r\n  };\r\n  names[2] = {\r\n    0: \"два\", 1: \"две\", 2: \"два\", 3: \"два\", 4: \"два\"\r\n  };\r\n  names[3] = \"три\";\r\n  names[4] = \"четыре\";\r\n  names[5] = \"пять\";\r\n  names[6] = \"шесть\";\r\n  names[7] = \"семь\";\r\n  names[8] = \"восемь\";\r\n  names[9] = \"девять\";\r\n  names[10] = \"десять\";\r\n  names[11] = \"одиннадцать\";\r\n  names[12] = \"двенадцать\";\r\n  names[13] = \"тринадцать\";\r\n  names[14] = \"четырнадцать\";\r\n  names[15] = \"пятнадцать\";\r\n  names[16] = \"шестнадцать\";\r\n  names[17] = \"семнадцать\";\r\n  names[18] = \"восемнадцать\";\r\n  names[19] = \"девятнадцать\";\r\n  names[20] = \"двадцать\";\r\n  names[30] = \"тридцать\";\r\n  names[40] = \"сорок\";\r\n  names[50] = \"пятьдесят\";\r\n  names[60] = \"шестьдесят\";\r\n  names[70] = \"семьдесят\";\r\n  names[80] = \"восемьдесят\";\r\n  names[90] = \"девяносто\";\r\n  names[100] = \"сто\";\r\n  names[200] = \"двести\";\r\n  names[300] = \"триста\";\r\n  names[400] = \"четыреста\";\r\n  names[500] = \"пятьсот\";\r\n  names[600] = \"шестьсот\";\r\n  names[700] = \"семьсот\";\r\n  names[800] = \"восемьсот\";\r\n  names[900] = \"девятьсот\";\r\n\r\n  let r = \"\", i, j, y = Math.floor(x);\r\n\r\n  // если НЕ ноль рублей\r\n  if (y > 0) {\r\n    // выделим тройки с руб., тыс., миллионами, миллиардами и триллионами\r\n    const t = [];\r\n    for (i = 0; i <= 4; i++) {\r\n      t[i] = y % 1000;\r\n      y = Math.floor(y / 1000);\r\n    }\r\n    const d = [];\r\n    // выделим в каждой тройке сотни, десятки и единицы\r\n    for (i = 0; i <= 4; i++) {\r\n      d[i] = [];\r\n      d[i][0] = t[i] % 10; // единицы\r\n      d[i][10] = (t[i] % 100) - d[i][0]; // десятки\r\n      d[i][100] = t[i] - d[i][10] - d[i][0]; // сотни\r\n      d[i][11] = t[i] % 100; // две правых цифры в виде числа\r\n    }\r\n\r\n    for (i = 4; i >= 0; i--) {\r\n      if (t[i] > 0) {\r\n        if (names[d[i][100]]) {\r\n          r += \" \" + (isObject(names[d[i][100]]) ? names[d[i][100]][i] : names[d[i][100]]);\r\n        }\r\n\r\n        if (names[d[i][11]]) {\r\n          r += \" \" + (isObject(names[d[i][11]]) ? names[d[i][11]][i] : names[d[i][11]]);\r\n        }\r\n        else {\r\n          if (names[d[i][10]]) {\r\n            r += \" \" + (isObject(names[d[i][10]]) ? names[d[i][10]][i] : names[d[i][10]]);\r\n          }\r\n\r\n          if (names[d[i][0]]) {\r\n            r += \" \" + (isObject(names[d[i][0]]) ? names[d[i][0]][i] : names[d[i][0]]);\r\n          }\r\n        }\r\n\r\n        if (names[d[i][11]]) {\r\n          // если существует числительное\r\n          // eslint-disable-next-line prefer-destructuring\r\n          j = d[i][11];\r\n        }\r\n        else {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          j = d[i][0];\r\n        }\r\n\r\n        if (groups[i][j]) {\r\n          if (i === 0) { r += \" \" + groups[i][j][currency] }\r\n          else { r += \" \" + groups[i][j] }\r\n        }\r\n        else if (i === 0) {\r\n          r += \" \" + groups[i][-1][currency];\r\n        }\r\n        else {\r\n          r += \" \" + groups[i][-1];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (t[0] === 0) { r += \" \" + groups[0][-1][currency] }\r\n  }\r\n  else {\r\n    r = \"Ноль \" + groups[0][-1][currency];\r\n  }\r\n\r\n  y = numRoundTo((x - Math.floor(x)) * 100, 0);\r\n  if (y < 10) { y = \"0\" + y }\r\n\r\n  // eslint-disable-next-line no-use-before-define\r\n  r = strTrimMiddle(r);\r\n  r = r.slice(0, 1).toUpperCase() + r.slice(1);\r\n  r += \" \" + y;\r\n\r\n  y *= 1; // ???\r\n\r\n  if (names[y]) { j = y }\r\n  else { j = y % 10 }\r\n\r\n  if (groups[9][j]) { r += \" \" + groups[9][j][currency] }\r\n  else { r += \" \" + groups[9][-1][currency] }\r\n\r\n  return r;\r\n};\r\n\r\nconst numRandom = (minVparam, maxVparam) => {\r\n  let minV = 0; if (isNumber(minVparam) && numIsInt(minVparam)) minV = minVparam;\r\n  let maxV = 10; if (isNumber(maxVparam) && numIsInt(maxVparam)) maxV = maxVparam;\r\n  return Math.floor(Math.random() * (maxV - minV + 1)) + minV;\r\n};\r\n\r\n// склонение именительных рядом с числительным: число (typeof = string), корень (не пустой), окончание\r\n// пример: declOfNum(a[1], 'копе', ['йка','йки','ек'])\r\n// еще пример: declOfNum(a[1], 'книг', ['а','и',''])\r\nconst declOfNum = (n, t, o) => {\r\n  const k = [2, 0, 1, 1, 1, 2, 2, 2, 2, 2];\r\n  return (t === \"\" ? \"\" : \" \" + t + (n[n.length - 2] === \"1\" ? o[2] : o[k[n[n.length - 1]]]));\r\n};\r\n\r\n// Работает пока только с целыми числами\r\n// Пример: numToPhrase2(1) + declOfNum(num.toString(), 'книг', ['а','и','']);\r\n// Выведет: Тридцать три книги\r\n// d = 1 нужно для правильного склонения: не «два книги», а «две книги»\r\nconst numToPhrase2 = (num, d) => {\r\n  // sub-function\r\n  /* eslint-disable max-len */\r\n  function t(kk, dd) { // преобразовать трёхзначные числа\r\n    const e = [\r\n      [\"\", \" один\", \" два\", \" три\", \" четыре\", \" пять\", \" шесть\", \" семь\", \" восемь\", \" девять\"],\r\n      [\" десять\", \" одиннадцать\", \" двенадцать\", \" тринадцать\", \" четырнадцать\", \" пятнадцать\", \" шестнадцать\", \" семнадцать\", \" восемнадцать\", \" девятнадцать\"],\r\n      [\"\", \"\", \" двадцать\", \" тридцать\", \" сорок\", \" пятьдесят\", \" шестьдесят\", \" семьдесят\", \" восемьдесят\", \" девяносто\"],\r\n      [\"\", \" сто\", \" двести\", \" триста\", \" четыреста\", \" пятьсот\", \" шестьсот\", \" семьсот\", \" восемьсот\", \" девятьсот\"],\r\n      [\"\", \" одна\", \" две\"]\r\n    ];\r\n    return e[3][kk[0]] + (kk[1] === 1 ? e[1][kk[2]] : e[2][kk[1]] + (dd ? e[4][kk[2]] : e[0][kk[2]]));\r\n  }\r\n  /* eslint-enable max-len */\r\n\r\n  let k = numRoundTo(num, 0).toString();\r\n  let i = \"\";\r\n  const e = [\r\n    [\"\", \"тысяч\", \"миллион\", \"миллиард\", \"триллион\", \"квадриллион\", \"квинтиллион\", \"секстиллион\", \"септиллион\", \"октиллион\", \"нониллион\", \"дециллион\"],\r\n    [\"а\", \"и\", \"\"],\r\n    [\"\", \"а\", \"ов\"]\r\n  ];\r\n\r\n  if (k === \"\" || k === \"0\") return \"Ноль\"; // 0\r\n  k = k.split(/(?=(?:\\d{3})+$)/); // разбить число в массив с трёхзначными числами\r\n  if (k[0].length === 1) k[0] = \"00\" + k[0];\r\n  if (k[0].length === 2) k[0] = \"0\" + k[0];\r\n  for (let j = (k.length - 1); j >= 0; j--) { // соединить трёхзначные числа в одно число, добавив названия разрядов с окончаниями\r\n    if (k[j] !== \"000\") {\r\n      i = (((d && j === (k.length - 1)) || j === (k.length - 2)) && (k[j][2] === \"1\" || k[j][2] === \"2\") ? t(k[j], 1) : t(k[j]))\r\n        + declOfNum(k[j], e[0][k.length - 1 - j], (j === (k.length - 2) ? e[1] : e[2])) + i;\r\n    }\r\n  }\r\n\r\n  // Можно было просто так: return i\r\n  // А вот так выведет с заглавной буквы и без лишнего пробела спереди:\r\n  return i[1].toUpperCase() + i.substring(2);\r\n};\r\n\r\n// Добавляет нули перед числом (всегда фиксированная длина числа)\r\nconst prefInt = (number, len) => (Array(len).join(\"0\") + number.slice(-len));\r\n\r\n/* ============================ */\r\n/* Strings */\r\n/* ============================ */\r\n\r\nconst strSubString = (fullString, leftString, rightString, startPozSearch) => {\r\n  const s = startPozSearch || 0;\r\n  const a = leftString || \"\";\r\n  const b = rightString || \"\";\r\n  if (!fullString || s > fullString.length) return \"\";\r\n\r\n  let tmpPozLeft, tmpPozRight;\r\n\r\n  if ((a.length === 0) && (b.length > 0)) {\r\n    tmpPozLeft = s;\r\n    tmpPozRight = fullString.indexOf(b, s);\r\n  } else if ((a.length > 0) && (b.length === 0)) {\r\n    tmpPozLeft = fullString.indexOf(a, s);\r\n    tmpPozRight = fullString.length;\r\n  } else {\r\n    tmpPozLeft = fullString.indexOf(a, s);\r\n    tmpPozRight = fullString.indexOf(b, tmpPozLeft + a.length);\r\n    if (!~tmpPozRight) tmpPozRight = tmpPozLeft + a.length; // fullString.length;\r\n  }\r\n\r\n  if (tmpPozLeft === -1 || tmpPozRight === -1) return \"\";\r\n  return fullString.slice(tmpPozLeft + leftString.length, tmpPozRight);\r\n};\r\n\r\nconst strTrimRight = (str) => str.replace(/(\\s+|\\n+)$/g, \"\");\r\n\r\nconst strTrimLeft = (str) => str.replace(/^(\\s+|\\n+)/g, \"\");\r\n\r\nconst strReplaceAll = (str, search, replacement) => str.split(search).join(replacement);\r\n\r\n// removes all spaces at the beginning and at the end of the string\r\nconst strTrim = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \" \");\r\n  return strTrimLeft(strTrimRight(s));\r\n};\r\n\r\n// removes all spaces at the beginning and at the end of the line\r\n// in addition, it replaces several consecutive gaps within the line by one space\r\nconst strTrimMiddle = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \" \");\r\n  return strTrim(s).replace(/\\s\\s+/g, \" \");\r\n};\r\n\r\nconst strTrimAll = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \"\");\r\n  return s.replace(/(\\s|\\n)/g, \"\");\r\n};\r\n\r\nconst strGetShortFIO = (fullFIO) => {\r\n  let outS = String(fullFIO || \"\");\r\n  if (outS === \"\") return \"\";\r\n  const mPr = strTrimMiddle(outS).split(\" \");\r\n  if (mPr.length > 1) {\r\n    outS = mPr[0] + \" \" + mPr[1].slice(0, 1) + \".\";\r\n    if (mPr[2]) outS += mPr[2].slice(0, 1) + \".\";\r\n  }\r\n  return outS;\r\n};\r\n\r\nconst strMakeID = (length) => {\r\n  let result = \"\";\r\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\nconst strTransliterateRUtoEN = (word) => {\r\n  const a = {\r\n    Ё: \"YO\",\r\n    Й: \"I\",\r\n    Ц: \"TS\",\r\n    У: \"U\",\r\n    К: \"K\",\r\n    Е: \"E\",\r\n    Н: \"N\",\r\n    Г: \"G\",\r\n    Ш: \"SH\",\r\n    Щ: \"SCH\",\r\n    З: \"Z\",\r\n    Х: \"H\",\r\n    Ъ: \"'\",\r\n    ё: \"yo\",\r\n    й: \"i\",\r\n    ц: \"ts\",\r\n    у: \"u\",\r\n    к: \"k\",\r\n    е: \"e\",\r\n    н: \"n\",\r\n    г: \"g\",\r\n    ш: \"sh\",\r\n    щ: \"sch\",\r\n    з: \"z\",\r\n    х: \"h\",\r\n    ъ: \"'\",\r\n    Ф: \"F\",\r\n    Ы: \"I\",\r\n    В: \"V\",\r\n    А: \"a\",\r\n    П: \"P\",\r\n    Р: \"R\",\r\n    О: \"O\",\r\n    Л: \"L\",\r\n    Д: \"D\",\r\n    Ж: \"ZH\",\r\n    Э: \"E\",\r\n    ф: \"f\",\r\n    ы: \"i\",\r\n    в: \"v\",\r\n    а: \"a\",\r\n    п: \"p\",\r\n    р: \"r\",\r\n    о: \"o\",\r\n    л: \"l\",\r\n    д: \"d\",\r\n    ж: \"zh\",\r\n    э: \"e\",\r\n    Я: \"Ya\",\r\n    Ч: \"CH\",\r\n    С: \"S\",\r\n    М: \"M\",\r\n    И: \"I\",\r\n    Т: \"T\",\r\n    Ь: \"'\",\r\n    Б: \"B\",\r\n    Ю: \"YU\",\r\n    я: \"ya\",\r\n    ч: \"ch\",\r\n    с: \"s\",\r\n    м: \"m\",\r\n    и: \"i\",\r\n    т: \"t\",\r\n    ь: \"'\",\r\n    б: \"b\",\r\n    ю: \"yu\"\r\n  };\r\n  return word.split(\"\").map((char) => a[char] || char).join(\"\");\r\n};\r\n\r\nconst strFileExtension = (filename) => {\r\n  // Alternate function: path.parse(filename).ext\r\n  const prts = (filename || \"\").split(\".\");\r\n  const ext = (prts[prts.length - 1] || prts).trim().toLowerCase();\r\n  return (prts.length >= 2 ? ext : \"\");\r\n};\r\n\r\nconst strClearFileName = (filename) => {\r\n  // Alternate function: path.parse(filename).name (or .base - with extention)\r\n  const i = filename.lastIndexOf(\".\");\r\n  let a = ((i < 0) ? \"\" : filename.slice(0, i));\r\n  a = strReplaceAll(a, \"\\\\\", \"/\");\r\n  const j = a.lastIndexOf(\"/\");\r\n  const b = ((j < 0) ? a : a.slice(j + 1, a.length - j - 1));\r\n  return b;\r\n};\r\n\r\n// Может ли строка стать числом\r\nconst strCanBeNum = (value) => {\r\n  if (value !== null && value !== \"\" && typeof value !== \"undefined\") {\r\n    let val = value; if (isString(value)) val = strReplaceAll(value, unknowSpase).replace(/,/g, \".\").replace(/\\s/g, \"\");\r\n    const intValue = parseInt(val, 10);\r\n    return !(Number.isNaN(intValue) || Number.isFinite(intValue));\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst hasUnicode = (str) => {\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str.charCodeAt(i) > 127) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/* ============================ */\r\n/* Arrays */\r\n/* ============================ */\r\n\r\nconst arrContains = (arr, elem, trimParam, caseNoSensitiveParam) => {\r\n  if (!isArray(arr) || !arr.length || isUndefinedOrNull(elem)) return false;\r\n  let ans = false;\r\n  let v = elem;\r\n  if (isString(v)) {\r\n    if (trimParam === true) { v = v.trim() }\r\n    if (caseNoSensitiveParam === true) { v = v.toLowerCase() }\r\n  }\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let a = arr[i];\r\n    if (isString(a)) {\r\n      if (trimParam === true) { a = a.trim() }\r\n      if (caseNoSensitiveParam === true) { a = a.toLowerCase() }\r\n    }\r\n    if (a === v) { ans = true; break }\r\n  }\r\n  return ans;\r\n};\r\n\r\n// Сравнение строк. Поместил тут, т.к. arrContains() определен только что.\r\n// params = \"toUpperCase, toLowerCase, caseNoSensitive, trim, trimMiddle, trimAll, transliterate, substring\"\r\n// или так: strCompare(str1, str2, \".caseNoSensitive.touppercase.tolowercase.trim.trimAll.transliterate.substring\")\r\nconst strCompare = (str1, str2, params) => {\r\n  if (!isString(str1) || !isString(str2)) return false;\r\n  if (!params || !isString(params)) return Boolean(str1 === str2);\r\n  const prms = strTrimAll(params).toLowerCase().replace(/(,|\\.)/g, \";\").split(\";\");\r\n  let s1 = str1, s2 = str2;\r\n  prms.forEach((p) => {\r\n    if (p === \"touppercase\" || p === \"tolowercase\" || p === \"casenosensitive\") { s1 = s1.toLowerCase(); s2 = s2.toLowerCase() }\r\n    else if (p === \"trim\") { s1 = strTrim(s1); s2 = strTrim(s2) }\r\n    else if (p === \"trimmiddle\") { s1 = strTrimMiddle(s1); s2 = strTrimMiddle(s2) }\r\n    else if (p === \"trimall\") { s1 = strTrimAll(s1); s2 = strTrimAll(s2) }\r\n    else if (p === \"transliterate\") { s1 = strTransliterateRUtoEN(s1); s2 = strTransliterateRUtoEN(s2) }\r\n  });\r\n\r\n  if (arrContains(prms, \"substring\")) return Boolean(~s1.indexOf(s2));\r\n  return Boolean(s1 === s2);\r\n};\r\n\r\n// Check 2 arrays are similar or not\r\nconst arrCompare = (arr1, arr2, exactmatch) => {\r\n  if (!isArray(arr1)) return false;\r\n  let ar2 = objClone(arr2); if (!isArray(arr2)) ar2 = [arr2];\r\n  let ans = true;\r\n  for (let i = 0; i < ar2.length; i++) {\r\n    let fnd = false;\r\n    for (let j = 0; j < arr1.length; j++) {\r\n      if (arr1[i] === ar2[j]) { fnd = true; break }\r\n    }\r\n    if (!fnd) { ans = false; break }\r\n  }\r\n  if (exactmatch === true) {\r\n    for (let i = 0; i < arr1.length; i++) {\r\n      let fnd = false;\r\n      for (let j = 0; j < ar2.length; j++) {\r\n        if (ar2[i] === arr1[j]) { fnd = true; break }\r\n      }\r\n      if (!fnd) { ans = false; break }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\n// Find object in array. optional comparedFields = [\"Title\", \"job\"...]\r\nconst arrFindObj = (arr, obj, comparedFields) => {\r\n  if (!isArray(arr) || !isObject(obj)) return false;\r\n  let ans = -1, str2 = \"\"; const obj2 = {};\r\n  if (comparedFields && isArray(comparedFields)) {\r\n    for (let j = 0; j < comparedFields.length; j++) {\r\n      if (objHasKey(obj, comparedFields[j])) obj2[comparedFields[j]] = obj[comparedFields[j]];\r\n    }\r\n    str2 = JSON.stringify(obj2);\r\n  }\r\n  else {\r\n    str2 = JSON.stringify(obj);\r\n  }\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const oo = arr[i], obj1 = {}; let str1 = \"\";\r\n    if (comparedFields && isArray(comparedFields)) {\r\n      for (let j = 0; j < comparedFields.length; j++) {\r\n        if (objHasKey(oo, comparedFields[j])) obj1[comparedFields[j]] = oo[comparedFields[j]];\r\n      }\r\n      str1 = JSON.stringify(obj1);\r\n    }\r\n    else {\r\n      const flds = objKeys(obj);\r\n      for (let j = 0; j < flds.length; j++) {\r\n        if (objHasKey(oo, flds[j])) obj1[flds[j]] = oo[flds[j]];\r\n      }\r\n      str1 = JSON.stringify(obj1);\r\n    }\r\n\r\n    if (str1 === str2) { ans = i; break }\r\n  }\r\n  return ans; // (-1 || 0...arr.length)\r\n};\r\n\r\nconst arrPush = (mainMtrx, addedMtrx) => {\r\n  // mainMtrx и addedMtrx могут быть матрицей, а могут и не быть ей (просто строка или число)\r\n  let result = [];\r\n  if (isArray(mainMtrx)) { result = mainMtrx }\r\n  else { result.push(mainMtrx) }\r\n\r\n  if (isArray(addedMtrx)) {\r\n    for (let j = 0; j < addedMtrx.length; j++) {\r\n      result.push(addedMtrx[j]);\r\n    }\r\n  }\r\n  else {\r\n    result.push(addedMtrx);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst arrRemove = (mainMtrx, deletedMtrx, delNullValuesParam, trimParam, caseNoSensitiveParam) => {\r\n  const result = [];\r\n  let smplMtrx = [], delMtrx = [];\r\n  if (isArray(mainMtrx)) { smplMtrx = mainMtrx }\r\n  else { smplMtrx.push(mainMtrx) }\r\n\r\n  if (isArray(deletedMtrx)) { delMtrx = deletedMtrx }\r\n  else { delMtrx.push(deletedMtrx) }\r\n\r\n  for (let i = 0; i < smplMtrx.length; i++) {\r\n    let tval = smplMtrx[i];\r\n    if (isString(tval)) {\r\n      if (trimParam) tval = tval.trim();\r\n      if (caseNoSensitiveParam) tval.toLowerCase();\r\n    }\r\n    if (!delNullValuesParam || (isString(tval) && tval !== \"\")) {\r\n      let found = false;\r\n      for (let j = 0; j < delMtrx.length; j++) {\r\n        let dval = delMtrx[j];\r\n        if (isString(dval)) {\r\n          if (trimParam) dval = dval.trim();\r\n          if (caseNoSensitiveParam) dval.toLowerCase();\r\n        }\r\n        if (dval === tval) { found = true; break }\r\n      }\r\n      if (!found) result.push(smplMtrx[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst arrGetUnique = (mainMtrx, delNullValuesParam, trimParam, caseNoSensitiveParam) => {\r\n  const result = [];\r\n  for (let i = 0; i < mainMtrx.length; i++) {\r\n    let tval = mainMtrx[i];\r\n    if (isString(tval)) {\r\n      if (trimParam) tval = tval.trim();\r\n      if (caseNoSensitiveParam) tval.toLowerCase();\r\n    }\r\n    if (!delNullValuesParam || tval !== \"\") {\r\n      let found = false;\r\n      for (let j = 0; j < result.length; j++) {\r\n        let dval = result[j];\r\n        if (isString(dval)) {\r\n          if (trimParam) dval = dval.trim();\r\n          if (caseNoSensitiveParam) dval.toLowerCase();\r\n        }\r\n        if (dval === tval) { found = true; break }\r\n      }\r\n      if (!found) result.push(mainMtrx[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/* ============================ */\r\n/* String to Numbers */\r\n/* ============================ */\r\n\r\nconst strToNum = (str, roundparam, absparam) => {\r\n  if (!str || !isString(str)) return 0;\r\n  const rg = /^-?(\\d+(\\.\\d*)?|\\.\\d+)$/;\r\n  // \\-? - может в начале стоит минус, а может и нет\r\n  // \\d+(\\.\\d+)? - [цифра или несколько] точка и несколько цифр после нее (а может и нет точки и цифр после нее)\r\n  // \\.\\d+ - число вроде .575 (начинается с точки)\r\n  const sNum = strReplaceAll(str.replace(/\\s+/g, \"\").replace(/,/, \".\"), unknowSpase, \"\");\r\n  const allNums = sNum.match(rg); // Сердце функции\r\n  if (!allNums.length) return 0;\r\n  try {\r\n    let ans = Number(allNums[0]);\r\n    if (absparam) ans = Math.abs(ans);\r\n    if (roundparam) ans = numRoundTo(ans, roundparam);\r\n    return ans;\r\n  }\r\n  catch (e) {\r\n    return 0;\r\n  }\r\n};\r\n\r\n// Возвращает массив из всех чисел в строке. Числа могут быть целыми, отрицательными, дробными...\r\nconst strGetAllNumbers = (str, roundparam, absparam) => {\r\n  if (!isString(str)) return null;\r\n  const sNum = strReplaceAll(str.replace(/,/, \".\"), unknowSpase);\r\n  const rg = /-?\\d+(\\.\\d+)?/gi;\r\n  // \\-? - может в начале стоит минус, а может и нет\r\n  // \\d+(\\.\\d+)? - [цифра или несколько] точка и несколько цифр после нее (а может и нет точки и цифр после нее)\r\n  // \\.\\d+ - число вроде .575 (начинается с точки) - этот вариант я убрал\r\n\r\n  const allNums = sNum.match(rg);\r\n\r\n  if (isArray(allNums)) {\r\n    for (let i = 0; i < allNums.length; i++) {\r\n      allNums[i] = strToNum(allNums[i]);\r\n      if (absparam) allNums[i] = Math.abs(allNums[i]);\r\n      if (roundparam) allNums[i] = numRoundTo(allNums[i], roundparam);\r\n    }\r\n    return allNums;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Возвращает i-число из строки (может быть отрицательным или дробным)\r\nconst strSearchNum = (CellString, indexNum, roundparam, absparam) => {\r\n  if (!isRealValue(CellString)) return 0;\r\n  let retVal = 0;\r\n  const allNumbers = strGetAllNumbers(CellString, roundparam, absparam);\r\n  if (isArray(allNumbers)) {\r\n    if (indexNum === 0) { retVal = allNumbers[allNumbers.length - 1] }\r\n    else if (numIsInt(indexNum) && isNumber(allNumbers[indexNum - 1])) { retVal = allNumbers[indexNum - 1] }\r\n  }\r\n  return retVal;\r\n};\r\n\r\n/* ============================ */\r\n/* Dates */\r\n/* ============================ */\r\n\r\nconst dateGetWeekDay = (date, lngparam) => {\r\n  let lng = \"ru\"; if (isString(lngparam)) lng = lngparam;\r\n  let days;\r\n  if (lng === \"ru\") {\r\n    days = [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"];\r\n  } else {\r\n    days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\r\n  }\r\n  return days[date.getDay()];\r\n};\r\n\r\nconst dateToString = (scDate, formatparam, hoursOffset) => {\r\n  // Выводит в формате \"YYYY-MM-DD\"\r\n  if (!isDate(scDate)) return \"\";\r\n  let frmt = \"YYYY-MM-DD\"; if (isString(formatparam) && formatparam !== \"\") frmt = formatparam;\r\n  const ssDate = objClone(scDate);\r\n  if (hoursOffset) ssDate.setTime(ssDate.getTime() + hoursOffset * 60000 * 60);\r\n\r\n  const realMonth = +ssDate.getMonth() + 1;\r\n  const realDate = +ssDate.getDate();\r\n  const ye = ssDate.getFullYear();\r\n  const mnth = (realMonth < 10 ? \"0\" : \"\") + realMonth;\r\n  const da = (realDate < 10 ? \"0\" : \"\") + realDate;\r\n  let h = \"0\" + ssDate.getHours(); h = h.slice(-2);\r\n  let m = \"0\" + ssDate.getMinutes(); m = m.slice(-2);\r\n  let s = \"0\" + ssDate.getSeconds(); s = s.slice(-2);\r\n\r\n  let strDate = \"\";\r\n  switch (frmt) {\r\n    case \"DD.MM.YYYY\":\r\n      strDate = da + \".\" + mnth + \".\" + ye;\r\n      break; // DD.MM.YYYY\r\n    case \"DD.MM.YYYY hh:mm\":\r\n      strDate = da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m;\r\n      break; // DD.MM.YYYY hh:mm\r\n    case \"DD.MM.YYYY hh:mm:ss\":\r\n      strDate = da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // DD.MM.YYYY hh:mm\r\n    case \"YYYY-MM-DD hh:mm:ss\":\r\n      strDate = ye + \"-\" + mnth + \"-\" + da + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // YYYY-MM-DD hh:mm:ss\r\n    case \"YYYY-MM-DD hh:mm\":\r\n      strDate = ye + \"-\" + mnth + \"-\" + da + \" \" + h + \":\" + m;\r\n      break; // YYYY-MM-DD hh:mm\r\n    case \"dd YYYY-MM-DD hh:mm:ss\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + ye + \"-\" + mnth + \"-\" + da + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // пн YYYY-MM-DD hh:mm:ss\r\n    case \"dd YYYY-MM-DD hh:mm\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + ye + \"-\" + mnth + \"-\" + da + \" \" + h + \":\" + m;\r\n      break; // пн YYYY-MM-DD hh:mm\r\n    case \"dd DD.MM.YYYY\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + da + \".\" + mnth + \".\" + ye;\r\n      break; // пн DD.MM.YYYY\r\n    case \"dd DD.MM.YYYY hh:mm\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m;\r\n      break; // пн DD.MM.YYYY hh:mm\r\n    case \"dd DD.MM.YYYY hh:mm:ss\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // пн DD.MM.YYYY hh:mm:ss\r\n    case \"hh:mm:ss\":\r\n      strDate = h + \":\" + m + \":\" + s;\r\n      break; // hh:mm:ss\r\n    case \"hh:mm\":\r\n      strDate = h + \":\" + m;\r\n      break; // hh:mm:ss\r\n    default:\r\n      strDate = ye + \"-\" + mnth + \"-\" + da;\r\n      break; // YYYY-MM-DD\r\n  }\r\n  return strDate;\r\n};\r\n\r\nconst dateFromString = (datastr, formatparam, hoursOffset) => {\r\n  if (!isString(datastr)) return null;\r\n  let frmt = \"YYYY-MM-DD\"; if (isString(formatparam) && formatparam !== \"\") frmt = formatparam;\r\n  let da, mnth, ye, dStr, hh = 0, mm = 0, ss = 0;\r\n  switch (frmt) {\r\n    case \"DD.MM.YYYY\":\r\n      dStr = datastr.split(\".\");\r\n      da = +dStr[0];\r\n      mnth = +dStr[1] - 1;\r\n      ye = +dStr[2];\r\n      break; // DD.MM.YYYY\r\n    case \"DD.MM.YYYY hh:mm\":\r\n    case \"DD.MM.YYYY hh:mm:ss\": {\r\n      const dts1 = strSubString(datastr, \"\", \" \");\r\n      if (dts1 === \"\") {\r\n        dStr = datastr.split(\".\");\r\n        da = +dStr[0];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[2];\r\n        break; // DD.MM.YYYY\r\n      }\r\n      else {\r\n        const dts2 = strSubString(datastr, \" \", \"\");\r\n        dStr = dts1.split(\".\");\r\n        da = +dStr[0];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[2]; // DD.MM.YYYY\r\n        const dTime = dts2.split(\":\");\r\n        hh = +dTime[0]; // hh:mm:ss\r\n        if (dTime.length > 1) mm = +dTime[1];\r\n        if (dTime.length > 2) ss = +dTime[2];\r\n      }\r\n      break;\r\n    }\r\n    case \"YYYY-MM-DD hh:mm:ss\": {\r\n      const dts1 = strSubString(datastr, \"\", \" \");\r\n      if (dts1 === \"\") {\r\n        dStr = datastr.split(\"-\");\r\n        da = +dStr[2];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[0];\r\n        break; // YYYY-MM-DD\r\n      }\r\n      else {\r\n        const dts2 = strSubString(datastr, \" \", \"\");\r\n        dStr = dts1.split(\"-\");\r\n        da = +dStr[2];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[0]; // YYYY-MM-DD\r\n        const dTime = dts2.split(\":\");\r\n        hh = +dTime[0]; // hh:mm:ss\r\n        if (dTime.length > 1) mm = +dTime[1];\r\n        if (dTime.length > 2) ss = +dTime[2];\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      dStr = datastr.split(\"-\");\r\n      da = +dStr[2];\r\n      mnth = +dStr[1] - 1;\r\n      ye = +dStr[0];\r\n      break; // YYYY-MM-DD\r\n  }\r\n\r\n  let data = 0;\r\n  try {\r\n    data = new Date(ye, mnth, da, hh, mm, ss);\r\n    if (hoursOffset) data.setTime(data.getTime() + hoursOffset * 60000 * 60);\r\n  } catch (ex) {\r\n    // log(ex.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nconst dateDaysBetween = (d1, d2) => {\r\n  try {\r\n    const timeDiff = d1.getTime() - d2.getTime();\r\n    const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)) - 1;\r\n    return diffDays;\r\n  }\r\n  catch (ex) {\r\n    // log(ex.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst validateTimestamp = (timestamp) => {\r\n  if (!/\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/.test(timestamp)) return false;\r\n  const split = timestamp.split(/[^\\d]+/);\r\n  // const year = parseFloat(split[0]);\r\n  const month = parseFloat(split[1]);\r\n  const day = parseFloat(split[2]);\r\n  const hour = parseFloat(split[3]);\r\n  const minute = parseFloat(split[4]);\r\n  const second = parseFloat(split[5]);\r\n  return hour < 25 && minute < 61 && second < 61 && month < 13 && day < 32;\r\n};\r\n\r\nconst ExcelDateToJSDate = (serial) => {\r\n  const utc_days = Math.floor(serial - 25569);\r\n  const utc_value = utc_days * 86400;\r\n  const date_info = new Date(utc_value * 1000);\r\n  const fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  let total_seconds = Math.floor(86400 * fractional_day);\r\n  const seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  const hours = Math.floor(total_seconds / (60 * 60));\r\n  const minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);\r\n};\r\n\r\nconst JSDateToExcelDate = (serial) => {\r\n  const td = objClone(serial);\r\n  if (!isDate(td)) return 0;\r\n  td.setTime(td.getTime() + (6 * 60000 * 60)); // td.addHours(6);\r\n  return (Number(td) / 86400000) + 25569;\r\n};\r\n\r\n// 108000000 -> \"00:30\" - convert milliseconds time to string \"hours:minutes\" (:second - optional)\r\nconst timeMillisecondsToTimeStr = (milliseconds, formatparam) => {\r\n  if (!milliseconds || !isNumber(milliseconds)) return \"\";\r\n  const frmt = formatparam || \"hh:mm\";\r\n  let msec = milliseconds || 0;\r\n  const hrs = Math.floor(milliseconds / 1000 / 60 / 60);\r\n  msec -= hrs * 1000 * 60 * 60;\r\n  const min = Math.floor(msec / 1000 / 60);\r\n  msec -= min * 1000 * 60;\r\n  const sec = Math.floor(msec / 1000);\r\n  msec -= sec * 1000;\r\n  const ans = prefInt(hrs, 2) + \":\" + prefInt(min, 2) + (frmt === \"hh:mm:ss\" ? \":\" + prefInt(sec, 2) : \"\");\r\n  return ans;\r\n};\r\n\r\n// \"00:30\" -> 108000000 milliseconds\r\nconst timeParseFromStr = (strTime, formatparam) => {\r\n  if (!strTime || !isString(strTime) || !(/^\\d\\d:\\d\\d(:\\d\\d)?$/i).test(strTime)) return 0;\r\n  const tm = strGetAllNumbers(strTime, 0, true);\r\n  if (tm.length < 2) return 0;\r\n  let ans = tm[0] * 1000 * 60 * 60 * 60;\r\n  ans += tm[1] * 1000 * 60 * 60;\r\n  if (formatparam !== \"hh:mm\" && tm.length === 3) ans += tm[1] * 1000 * 60;\r\n  return ans;\r\n};\r\n\r\n/* ============================ */\r\n/*     Encoding - Decoding      */\r\n/* ============================ */\r\n\r\nconst Base64encode = (s) => {\r\n  const buff = Buffer.from(s);\r\n  return buff.toString(\"base64\");\r\n};\r\n\r\nconst Base64decode = (s, charCode) => {\r\n  const buff = Buffer.from(s, \"base64\");\r\n  return buff.toString(charCode || \"utf8\");\r\n  // ascii , utf8 , ucs2 , base64 , binary\r\n};\r\n\r\n/* Universal functions */\r\n\r\nconst pathParentModule = () => {\r\n  let ans = \"???\";\r\n  if (module && module.parent) { // Server-code\r\n    const mpath = strReplaceAll(module.parent.filename, \"\\\\\", \"/\").split(\"/\");\r\n    ans = mpath[mpath.length - 1];\r\n    if (mpath.length > 1) ans = mpath[mpath.length - 2] + \"/\" + mpath[mpath.length - 1];\r\n  }\r\n  else { // Client-code\r\n    const errstack = String((new Error()).stack).replace(\"Error\\n\", \"\").split(\"\\n\"), stk = [];\r\n    errstack.forEach((ee) => { stk.push(ee.trim().replace(/^at\\s/g, \"\")) });\r\n    // Analise Err.stack\r\n    for (let i = 0; i < stk.length; i++) {\r\n      if ((/\\[as log\\]/g).test(stk[i])) {\r\n        ans = stk[i + 1] || stk[i];\r\n        break;\r\n      }\r\n    }\r\n    const regex1 = /\\/js\\/([a-z]+\\.(js|jsx|ejs))/ig;\r\n    if (regex1.test(ans)) ans = ans.match(regex1)[0];\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst log = (prms) => new Promise((resolve, reject) => {\r\n  // prms = {msgtype, message, module, caller, userip, toconsole=true, tobase=false};\r\n  // prms can be a simple String\r\n  let p = objClone(prms);\r\n\r\n  if (isString(p)) { p = { message: prms, msgtype: \"info\", toconsole: true, tobase: false } }\r\n  else if (!isObject(p)) { reject(new Error(\"(prms) is not a String and is not an Object\")); return }\r\n\r\n  if (p.msg && !p.message) p.message = p.msg;\r\n  if (!p.message || p.message === \"\") { reject(new Error(\"arg message is null\")); return }\r\n  if (isString(p.message) && !p.message.startsWith(\"ClientSide. \")) p.message = \"ClientSide. \" + p.message;\r\n\r\n  if (!p.caller) {\r\n    try { p.caller = log.caller; p.caller = String(p.caller) }\r\n    catch (err1) { p.caller = \"???\" }\r\n  }\r\n  if (p.caller.length > 100) p.caller = p.caller.slice(0, 100) + \"....\";\r\n\r\n  // msgtype: error, warning, info\r\n  p.msgtype = p.msgtype || \"info\";\r\n  p.module = p.module || pathParentModule();\r\n  p.datetime = p.datetime || new Date();\r\n  // p.userip = p.userip || \"???\";\r\n\r\n  if (p.tobase === true && window.$) {\r\n    window.$.ajax({\r\n      type: \"POST\",\r\n      data: JSON.stringify(p),\r\n      contentType: \"application/json\",\r\n      url: \"/api/toserverlog\"\r\n    }).done((ans1) => {\r\n      if (ans1.userip) p.userip = ans1.userip;\r\n      if (enableConsoleLog && (p.toconsole === true || typeof p.toconsole === \"undefined\")) {\r\n        if (p.msgtype === \"error\") { console.error(p.message) }\r\n        else { console.log(p) }\r\n      }\r\n      resolve(true);\r\n    }).fail((err1) => {\r\n      console.log(err1); reject(new Error(\"$.ajax error\"));\r\n    });\r\n  }\r\n  else {\r\n    if (enableConsoleLog && (p.toconsole === true || typeof p.toconsole === \"undefined\")) {\r\n      if (p.msgtype === \"error\") { console.error(p) }\r\n      else { console.log(p) }\r\n    }\r\n    resolve(true);\r\n  }\r\n});\r\n\r\n// fetch helpers\r\nconst fetchGetHeaders = (response, header) => {\r\n  const ans = {result: false, headers: [], values: [], header, value: undefined };\r\n  if (response && response.headers) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const pair of response.headers.entries()) {\r\n      if (pair.length) {\r\n        ans.headers.push(pair[0]); ans.values.push(pair[1]);\r\n        if (header && header !== \"\") {\r\n          if (pair[0].toLowerCase() === header.toLowerCase()) { ans.header = pair[0]; ans.value = pair[1]; ans.result = true }\r\n        }\r\n        else {\r\n          ans.result = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst delay = (ms) => new Promise((resolve) => {\r\n  setTimeout(resolve, ms);\r\n});\r\n\r\nconst compareIP = (ip, mask) => {\r\n  let ans = false; if (!ip || !isString(ip) || !mask) return ans;\r\n  if (isString(mask)) { return Boolean(ip === mask) }\r\n  if (isRegExp(mask)) { mask.lastIndex = 0; return (mask.test(ip)) }\r\n  if (isArray(mask)) {\r\n    for (let i = 0; i < mask.length; i++) {\r\n      if (isString(mask[i]) && ip === mask) { ans = true; break }\r\n      if (isRegExp(mask[i])) { mask[i].lastIndex = 0; if (mask[i].test(ip)) { ans = true; break } }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\n/* ============================ */\r\n/*   and finnally - Exports!    */\r\n/* ============================ */\r\n\r\nmodule.exports = {\r\n  log, // console.log() + save to 'db.systemlog'\r\n  isString, // detect type of var\r\n  isNumber,\r\n  canbeNumber, // checking can String be convertible to Number\r\n  isBoolean,\r\n  isDate,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isUndefinedOrNull,\r\n  isRegExp,\r\n  isRealValue,\r\n  isMobileDevice, // true - if user open page on mobile device\r\n  documentSize, // usefull content width & height\r\n  windowSize, // full page width & height\r\n  objByString, // Get Object one key value. Args: Object, Path: \"dict.ru.homepage.title[0]\"\r\n  objClone, // Clone Objects, Arrays, Dates and simple var (Numbers, Strings...)\r\n  objKeys,\r\n  objHasKey,\r\n  objToJSON,\r\n  objFromJSON,\r\n  strSubString,\r\n  strToNum,\r\n  strTrimRight,\r\n  strTrimLeft,\r\n  strTrim,\r\n  strTrimMiddle,\r\n  strTrimAll,\r\n  strReplaceAll,\r\n  strGetShortFIO,\r\n  strMakeID,\r\n  strTransliterateRUtoEN,\r\n  strFileExtension,\r\n  strClearFileName,\r\n  strCanBeNum,\r\n  strGetAllNumbers,\r\n  strSearchNum,\r\n  strCompare, // strCompare(str1, str2, \".caseNoSensitive.touppercase.tolowercase.trim.trimAll.transliterate.substring\")\r\n  hasUnicode,\r\n  arrContains, // RetVal: Boolean. Args: (arr, elem, trimParam, caseNoSensitiveParam). Finding Numbers or String in Arrays\r\n  arrPush, // push []\r\n  arrRemove, // remove []\r\n  arrGetUnique,\r\n  arrCompare, // Compare 2 Arrays. RetVal: Boolean\r\n  arrFindObj, // Find i-Object in Array using Some fields. arrFindObj (arr, obj, comparedFields: [\"name\", \"internalip\"...])\r\n  numIsInt,\r\n  numRoundTo,\r\n  numRoundToNearest,\r\n  numToFloatStr,\r\n  numToPhrase,\r\n  numToPhrase2,\r\n  declOfNum,\r\n  numRandom,\r\n  prefInt,\r\n  dateToString,\r\n  dateFromString,\r\n  dateDaysBetween,\r\n  ExcelDateToJSDate,\r\n  JSDateToExcelDate,\r\n  validateTimestamp,\r\n  timeMillisecondsToTimeStr, // 108000000 -> \"00:30\" - convert milliseconds time to string \"hours:minutes\" (:second - optional)\r\n  timeParseFromStr, // \"00:30\" -> 108000000 milliseconds\r\n  Base64encode,\r\n  Base64decode,\r\n  fetchGetHeaders,\r\n  delay,\r\n  compareIP // compareIP (ip, mask) => true / false. \"mask\" can be String || Regexp || Array(String || Regexp)\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(905);\n"],"names":["root","factory","exports","module","define","amd","self","_typeof","obj","Symbol","iterator","constructor","prototype","__esModule","unknowSpase","String","fromCharCode","isString","value","Boolean","isNumber","Number","isFinite","canbeNumber","n","isNaN","parseFloat","isBoolean","isDate","Date","isArray","Array","isFunction","isObject","Object","isUndefinedOrNull","isRegExp","RegExp","isRealValue","numIsInt","num","Math","round","isMobileDevice","userAgent","test","substr","documentSize","documnt","ans","width","height","result","dcm","document","documentElement","scrollWidth","scrollHeight","windowSize","windw","wnd","window","innerWidth","innerHeight","objToJSON","sourceObj","a","JSON","stringify","err","objFromJSON","sourceJSON","parse","objClone","getTime","slice","objKeys","keys","forEach","key","push","objHasKey","objByString","o","s","s1","replace","split","o1","i","length","k","numRoundTo","x","numRoundToNearest","m","numToFloatStr","triads","d","toString","indexOf","repeat","b","numToPhrase","c","currency","trimAll","toUpperCase","groups","RUB","USD","EUR","names","j","r","y","floor","t","strTrimMiddle","numRandom","minVparam","maxVparam","minV","maxV","random","declOfNum","numToPhrase2","kk","dd","e","substring","prefInt","number","len","join","strSubString","fullString","leftString","rightString","startPozSearch","tmpPozLeft","tmpPozRight","strTrimRight","str","strTrimLeft","strReplaceAll","search","replacement","strTrim","strTrimAll","strGetShortFIO","fullFIO","outS","mPr","strMakeID","characters","charAt","strTransliterateRUtoEN","word","Ё","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","ё","й","ц","у","к","е","н","г","ш","щ","з","х","ъ","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","ф","ы","в","а","п","р","о","л","д","ж","э","Я","Ч","С","М","И","Т","Ь","Б","Ю","я","ч","с","м","и","т","ь","б","ю","map","char","strFileExtension","filename","prts","ext","trim","toLowerCase","strClearFileName","lastIndexOf","strCanBeNum","val","intValue","parseInt","hasUnicode","charCodeAt","arrContains","arr","elem","trimParam","caseNoSensitiveParam","v","strCompare","str1","str2","params","prms","s2","p","arrCompare","arr1","arr2","exactmatch","ar2","fnd","arrFindObj","comparedFields","obj2","oo","obj1","flds","arrPush","mainMtrx","addedMtrx","arrRemove","deletedMtrx","delNullValuesParam","smplMtrx","delMtrx","tval","found","dval","arrGetUnique","strToNum","roundparam","absparam","allNums","match","abs","strGetAllNumbers","strSearchNum","CellString","indexNum","retVal","allNumbers","dateGetWeekDay","date","lngparam","lng","getDay","dateToString","scDate","formatparam","hoursOffset","frmt","ssDate","setTime","realMonth","getMonth","realDate","getDate","ye","getFullYear","mnth","da","h","getHours","getMinutes","getSeconds","strDate","dateFromString","datastr","dStr","hh","mm","ss","dts1","dts2","dTime","data","ex","dateDaysBetween","d1","d2","timeDiff","ceil","validateTimestamp","timestamp","month","day","hour","minute","second","ExcelDateToJSDate","serial","utc_days","date_info","fractional_day","total_seconds","seconds","hours","minutes","JSDateToExcelDate","td","timeMillisecondsToTimeStr","milliseconds","msec","hrs","min","sec","timeParseFromStr","strTime","tm","Base64encode","Buffer","from","Base64decode","charCode","pathParentModule","parent","mpath","errstack","Error","stack","stk","ee","regex1","log","Promise","resolve","reject","message","msgtype","toconsole","tobase","msg","startsWith","caller","err1","datetime","$","ajax","type","contentType","url","done","ans1","userip","console","error","fail","fetchGetHeaders","response","header","headers","values","undefined","entries","pair","delay","ms","setTimeout","compareIP","ip","mask","lastIndex","enableConsoleLog","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","nmd","paths","children"],"sourceRoot":""}