{"version":3,"file":"rz.js","mappings":"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","sources":["webpack://rz/webpack/universalModuleDefinition","webpack://rz/./node_modules/@babel/runtime/helpers/typeof.js","webpack://rz/./serverside/myapps/rz.js","webpack://rz/webpack/bootstrap","webpack://rz/webpack/runtime/node module decorator","webpack://rz/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rz\"] = factory();\n\telse\n\t\troot[\"rz\"] = factory();\n})(self, function() {\nreturn ","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/* constants */\r\n\r\nconst enableConsoleLog = true;\r\nconst unknowSpase = String.fromCharCode(160); // \"неразрывный пробел\" или &nbsp;\r\n\r\n/* Check Types */\r\n\r\nconst isString = (value) => Boolean(typeof value === \"string\" || value instanceof String);\r\n\r\nconst isNumber = (value) => Boolean(typeof value === \"number\" && Number.isFinite(value));\r\n\r\nconst canbeNumber = (n) => Boolean(!Number.isNaN(parseFloat(n)) && Number.isFinite(n));\r\n\r\nconst isBoolean = (value) => Boolean(typeof value === \"boolean\");\r\n\r\nconst isDate = (value) => Boolean(value instanceof Date);\r\n\r\nconst isArray = (value) => Boolean(value && typeof value === \"object\" && value.constructor === Array);\r\n\r\nconst isFunction = (value) => Boolean(typeof value === \"function\");\r\n\r\nconst isObject = (value) => Boolean(value && typeof value === \"object\" && value.constructor === Object);\r\n\r\nconst isUndefinedOrNull = (value) => Boolean(typeof value === \"undefined\" || value === null);\r\n\r\nconst isRegExp = (value) => Boolean(value && typeof value === \"object\" && value.constructor === RegExp);\r\n\r\nconst isRealValue = (value) => Boolean(value && value !== \"null\" && value !== \"undefined\" && value !== \"\");\r\n\r\nconst numIsInt = (num) => Boolean(Math.round(num) === num);\r\n\r\n/* ============================ */\r\n/*           Web-page           */\r\n/* ============================ */\r\n\r\n/* eslint-disable max-len */\r\nconst isMobileDevice = (userAgent) => Boolean(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(userAgent)\r\n|| /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\\\-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(userAgent.substr(0, 4)));\r\n/* eslint-enable max-len */\r\n\r\nconst documentSize = (documnt) => {\r\n  const ans = {width: 0, height: 0, result: false};\r\n  const dcm = documnt || document;\r\n  if (dcm && dcm.documentElement && dcm.documentElement.scrollWidth) { ans.width = dcm.documentElement.scrollWidth; ans.height = dcm.documentElement.scrollHeight; ans.result = true }\r\n  return ans;\r\n};\r\n\r\nconst windowSize = (windw) => {\r\n  const ans = {width: 0, height: 0, result: false};\r\n  const wnd = windw || window;\r\n  if (wnd && wnd.innerWidth && wnd.innerHeight) { ans.width = wnd.innerWidth; ans.height = wnd.innerHeight; ans.result = true }\r\n  return ans;\r\n};\r\n\r\n/* ============================ */\r\n/*            Objects           */\r\n/* ============================ */\r\n\r\n// Cloning objects\r\nconst objToJSON = (sourceObj) => {\r\n  let a = {};\r\n  try {\r\n    a = JSON.stringify(sourceObj);\r\n  } catch (err) {\r\n    a = null;\r\n  }\r\n  return a;\r\n};\r\n\r\nconst objFromJSON = (sourceJSON) => {\r\n  let a = {};\r\n  try {\r\n    a = JSON.parse(sourceJSON);\r\n  } catch (err) {\r\n    a = null;\r\n  }\r\n  return a;\r\n};\r\n\r\n// can clone Objects and Dates and Strings and Numbers!\r\nconst objClone = (sourceObj) => {\r\n  let ans = null;\r\n  if (isDate(sourceObj)) {\r\n    ans = new Date(sourceObj.getTime());\r\n  }\r\n  else if (isArray(sourceObj)) {\r\n    ans = sourceObj.slice(0);\r\n  }\r\n  else if (isObject(sourceObj)) {\r\n    const a = objToJSON(sourceObj);\r\n    ans = objFromJSON(a);\r\n  }\r\n  else if (isNumber(sourceObj) || isString(sourceObj) || isBoolean(sourceObj)) {\r\n    ans = sourceObj;\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst objKeys = (obj) => {\r\n  const ans = [];\r\n  if (!isObject(obj)) return ans;\r\n  Object.keys(obj).forEach((key) => {\r\n    ans.push(key);\r\n  });\r\n  return ans;\r\n};\r\n\r\nconst objHasKey = (obj, key) => {\r\n  if (!isObject(obj) || !isString(key)) return false;\r\n  return Boolean(key in obj);\r\n};\r\n\r\nconst objByString = (o, s) => {\r\n  let s1 = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\r\n  s1 = s1.replace(/^\\./, \"\"); // strip a leading dot\r\n  const a = s1.split(\".\");\r\n  let o1 = objClone(o);\r\n  for (let i = 0, n = a.length; i < n; i++) {\r\n    const k = a[i];\r\n    if (k in o1) {\r\n      o1 = o1[k];\r\n      // if (~s.indexOf(\"elements\")) console.log(o1);\r\n    }\r\n    else { return null }\r\n  }\r\n  return o1;\r\n};\r\n\r\n/* ============================ */\r\n/* Numbers */\r\n/* ============================ */\r\n\r\nconst numRoundTo = (num, n) => {\r\n  let x = 0;\r\n  if (isNumber(n) && numIsInt(n) && n >= -6 && n <= 6) x = n;\r\n  x = 10 ** x;\r\n  return Math.round(num * x) / x;\r\n};\r\n\r\nconst numRoundToNearest = (num, m) => {\r\n  if (isNumber(m)) return Number(num % m ? num + m - (num % m) : num);\r\n  return false;\r\n};\r\n\r\nconst numToFloatStr = (num, n, triads) => {\r\n  let s, d = 0, k, m;\r\n  if (isNumber(n) && numIsInt(n) && n >= -6 && n <= 6) d = n;\r\n  s = numRoundTo(num, d).toString().replace(\".\", \",\");\r\n\r\n  if (d > 0) {\r\n    k = s.indexOf(\",\");\r\n    if (k === -1) { s += \",\" + \"0\".repeat(d) }\r\n    else {\r\n      const a = s.slice(0, k - 1), b = s.slice(k + 1, s.length - k - 1);\r\n      if (d > 0 && b.length > d) {\r\n        s = a + \",\" + b.slice(0, d);\r\n      }\r\n      else {\r\n        s += \"0\".repeat(d - (s.length - k - 1));\r\n      }\r\n      s += \"0\".repeat(d - (s.length - k - 1));\r\n    }\r\n  }\r\n\r\n  k = s.indexOf(\",\"); if (k === -1) { k = s.length }\r\n  m = s.indexOf(\"-\");\r\n  if (m === -1) { m = 0 } else { m = 1 }\r\n\r\n  if (triads !== false) {\r\n    for (d = k - 3; d > m; d -= 3) {\r\n      s = s.slice(0, d) + \" \" + s.slice(d, s.length - d + 1);\r\n    }\r\n  }\r\n  return s;\r\n};\r\n\r\nconst numToPhrase = (num, c) => {\r\n  // let lng = \"ru\"; if (isString(lngparam)) lng = lngparam;\r\n  const x = numRoundTo(num, 2);\r\n  if (x < 0 || x > 999999999999999) return false;\r\n\r\n  let currency = \"RUB\"; if (isString(c)) currency = c.trimAll().toUpperCase();\r\n  if (currency !== \"RUB\" && currency !== \"USD\" && currency !== \"EUR\") return false;\r\n\r\n  const groups = [];\r\n  groups[0] = []; groups[1] = []; groups[2] = []; groups[3] = []; groups[4] = []; groups[9] = [];\r\n\r\n  // рубли по умолчанию\r\n  groups[0][-1] = { RUB: \"рублей\", USD: \"долларов США\", EUR: \"евро\" };\r\n  // исключения\r\n  groups[0][1] = { RUB: \"рубль\", USD: \"доллар США\", EUR: \"евро\" };\r\n  groups[0][2] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n  groups[0][3] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n  groups[0][4] = { RUB: \"рубля\", USD: \"доллара США\", EUR: \"евро\" };\r\n\r\n  // тысячи\r\n  groups[1][-1] = \"тысяч\"; // по умолчанию\r\n  // исключения\r\n  groups[1][1] = \"тысяча\";\r\n  groups[1][2] = \"тысячи\";\r\n  groups[1][3] = \"тысячи\";\r\n  groups[1][4] = \"тысячи\";\r\n\r\n  // миллионы\r\n  groups[2][-1] = \"миллионов\"; // по умолчанию\r\n  // исключения\r\n  groups[2][1] = \"миллион\";\r\n  groups[2][2] = \"миллиона\";\r\n  groups[2][3] = \"миллиона\";\r\n  groups[2][4] = \"миллиона\";\r\n\r\n  // миллиарды\r\n  groups[3][-1] = \"миллиардов\"; // по умолчанию\r\n  // исключения\r\n  groups[3][1] = \"миллиард\";\r\n  groups[3][2] = \"миллиарда\";\r\n  groups[3][3] = \"миллиарда\";\r\n  groups[3][4] = \"миллиарда\";\r\n\r\n  // триллионы\r\n  groups[4][-1] = \"триллионов\"; // по умолчанию\r\n  // исключения\r\n  groups[4][1] = \"триллион\";\r\n  groups[4][2] = \"триллиона\";\r\n  groups[4][3] = \"триллиона\";\r\n  groups[4][4] = \"триллиона\";\r\n\r\n  // копейки\r\n  groups[9][-1] = { RUB: \"копеек\", USD: \"центов\", EUR: \"центов\" }; // по умолчанию\r\n  // исключения\r\n  groups[9][1] = { RUB: \"копейка\", USD: \"цент\", EUR: \"цент\" };\r\n  groups[9][2] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n  groups[9][3] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n  groups[9][4] = { RUB: \"копейки\", USD: \"цента\", EUR: \"цента\" };\r\n\r\n  // цифры и числа\r\n  // либо просто строка, либо 4 строки в хэше\r\n  const names = [];\r\n  names[1] = {\r\n    0: \"один\", 1: \"одна\", 2: \"один\", 3: \"один\", 4: \"один\"\r\n  };\r\n  names[2] = {\r\n    0: \"два\", 1: \"две\", 2: \"два\", 3: \"два\", 4: \"два\"\r\n  };\r\n  names[3] = \"три\";\r\n  names[4] = \"четыре\";\r\n  names[5] = \"пять\";\r\n  names[6] = \"шесть\";\r\n  names[7] = \"семь\";\r\n  names[8] = \"восемь\";\r\n  names[9] = \"девять\";\r\n  names[10] = \"десять\";\r\n  names[11] = \"одиннадцать\";\r\n  names[12] = \"двенадцать\";\r\n  names[13] = \"тринадцать\";\r\n  names[14] = \"четырнадцать\";\r\n  names[15] = \"пятнадцать\";\r\n  names[16] = \"шестнадцать\";\r\n  names[17] = \"семнадцать\";\r\n  names[18] = \"восемнадцать\";\r\n  names[19] = \"девятнадцать\";\r\n  names[20] = \"двадцать\";\r\n  names[30] = \"тридцать\";\r\n  names[40] = \"сорок\";\r\n  names[50] = \"пятьдесят\";\r\n  names[60] = \"шестьдесят\";\r\n  names[70] = \"семьдесят\";\r\n  names[80] = \"восемьдесят\";\r\n  names[90] = \"девяносто\";\r\n  names[100] = \"сто\";\r\n  names[200] = \"двести\";\r\n  names[300] = \"триста\";\r\n  names[400] = \"четыреста\";\r\n  names[500] = \"пятьсот\";\r\n  names[600] = \"шестьсот\";\r\n  names[700] = \"семьсот\";\r\n  names[800] = \"восемьсот\";\r\n  names[900] = \"девятьсот\";\r\n\r\n  let r = \"\", i, j, y = Math.floor(x);\r\n\r\n  // если НЕ ноль рублей\r\n  if (y > 0) {\r\n    // выделим тройки с руб., тыс., миллионами, миллиардами и триллионами\r\n    const t = [];\r\n    for (i = 0; i <= 4; i++) {\r\n      t[i] = y % 1000;\r\n      y = Math.floor(y / 1000);\r\n    }\r\n    const d = [];\r\n    // выделим в каждой тройке сотни, десятки и единицы\r\n    for (i = 0; i <= 4; i++) {\r\n      d[i] = [];\r\n      d[i][0] = t[i] % 10; // единицы\r\n      d[i][10] = (t[i] % 100) - d[i][0]; // десятки\r\n      d[i][100] = t[i] - d[i][10] - d[i][0]; // сотни\r\n      d[i][11] = t[i] % 100; // две правых цифры в виде числа\r\n    }\r\n\r\n    for (i = 4; i >= 0; i--) {\r\n      if (t[i] > 0) {\r\n        if (names[d[i][100]]) {\r\n          r += \" \" + (isObject(names[d[i][100]]) ? names[d[i][100]][i] : names[d[i][100]]);\r\n        }\r\n\r\n        if (names[d[i][11]]) {\r\n          r += \" \" + (isObject(names[d[i][11]]) ? names[d[i][11]][i] : names[d[i][11]]);\r\n        }\r\n        else {\r\n          if (names[d[i][10]]) {\r\n            r += \" \" + (isObject(names[d[i][10]]) ? names[d[i][10]][i] : names[d[i][10]]);\r\n          }\r\n\r\n          if (names[d[i][0]]) {\r\n            r += \" \" + (isObject(names[d[i][0]]) ? names[d[i][0]][i] : names[d[i][0]]);\r\n          }\r\n        }\r\n\r\n        if (names[d[i][11]]) {\r\n          // если существует числительное\r\n          // eslint-disable-next-line prefer-destructuring\r\n          j = d[i][11];\r\n        }\r\n        else {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          j = d[i][0];\r\n        }\r\n\r\n        if (groups[i][j]) {\r\n          if (i === 0) { r += \" \" + groups[i][j][currency] }\r\n          else { r += \" \" + groups[i][j] }\r\n        }\r\n        else if (i === 0) {\r\n          r += \" \" + groups[i][-1][currency];\r\n        }\r\n        else {\r\n          r += \" \" + groups[i][-1];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (t[0] === 0) { r += \" \" + groups[0][-1][currency] }\r\n  }\r\n  else {\r\n    r = \"Ноль \" + groups[0][-1][currency];\r\n  }\r\n\r\n  y = numRoundTo((x - Math.floor(x)) * 100, 0);\r\n  if (y < 10) { y = \"0\" + y }\r\n\r\n  // eslint-disable-next-line no-use-before-define\r\n  r = strTrimMiddle(r);\r\n  r = r.slice(0, 1).toUpperCase() + r.slice(1);\r\n  r += \" \" + y;\r\n\r\n  y *= 1; // ???\r\n\r\n  if (names[y]) { j = y }\r\n  else { j = y % 10 }\r\n\r\n  if (groups[9][j]) { r += \" \" + groups[9][j][currency] }\r\n  else { r += \" \" + groups[9][-1][currency] }\r\n\r\n  return r;\r\n};\r\n\r\nconst numRandom = (minVparam, maxVparam) => {\r\n  let minV = 0; if (isNumber(minVparam) && numIsInt(minVparam)) minV = minVparam;\r\n  let maxV = 10; if (isNumber(maxVparam) && numIsInt(maxVparam)) maxV = maxVparam;\r\n  return Math.floor(Math.random() * (maxV - minV + 1)) + minV;\r\n};\r\n\r\n// склонение именительных рядом с числительным: число (typeof = string), корень (не пустой), окончание\r\n// пример: declOfNum(a[1], 'копе', ['йка','йки','ек'])\r\n// еще пример: declOfNum(a[1], 'книг', ['а','и',''])\r\nconst declOfNum = (n, t, o) => {\r\n  const k = [2, 0, 1, 1, 1, 2, 2, 2, 2, 2];\r\n  return (t === \"\" ? \"\" : \" \" + t + (n[n.length - 2] === \"1\" ? o[2] : o[k[n[n.length - 1]]]));\r\n};\r\n\r\n// Работает пока только с целыми числами\r\n// Пример: numToPhrase2(1) + declOfNum(num.toString(), 'книг', ['а','и','']);\r\n// Выведет: Тридцать три книги\r\n// d = 1 нужно для правильного склонения: не «два книги», а «две книги»\r\nconst numToPhrase2 = (num, d) => {\r\n  // sub-function\r\n  /* eslint-disable max-len */\r\n  function t(kk, dd) { // преобразовать трёхзначные числа\r\n    const e = [\r\n      [\"\", \" один\", \" два\", \" три\", \" четыре\", \" пять\", \" шесть\", \" семь\", \" восемь\", \" девять\"],\r\n      [\" десять\", \" одиннадцать\", \" двенадцать\", \" тринадцать\", \" четырнадцать\", \" пятнадцать\", \" шестнадцать\", \" семнадцать\", \" восемнадцать\", \" девятнадцать\"],\r\n      [\"\", \"\", \" двадцать\", \" тридцать\", \" сорок\", \" пятьдесят\", \" шестьдесят\", \" семьдесят\", \" восемьдесят\", \" девяносто\"],\r\n      [\"\", \" сто\", \" двести\", \" триста\", \" четыреста\", \" пятьсот\", \" шестьсот\", \" семьсот\", \" восемьсот\", \" девятьсот\"],\r\n      [\"\", \" одна\", \" две\"]\r\n    ];\r\n    return e[3][kk[0]] + (kk[1] === 1 ? e[1][kk[2]] : e[2][kk[1]] + (dd ? e[4][kk[2]] : e[0][kk[2]]));\r\n  }\r\n  /* eslint-enable max-len */\r\n\r\n  let k = numRoundTo(num, 0).toString();\r\n  let i = \"\";\r\n  const e = [\r\n    [\"\", \"тысяч\", \"миллион\", \"миллиард\", \"триллион\", \"квадриллион\", \"квинтиллион\", \"секстиллион\", \"септиллион\", \"октиллион\", \"нониллион\", \"дециллион\"],\r\n    [\"а\", \"и\", \"\"],\r\n    [\"\", \"а\", \"ов\"]\r\n  ];\r\n\r\n  if (k === \"\" || k === \"0\") return \"Ноль\"; // 0\r\n  k = k.split(/(?=(?:\\d{3})+$)/); // разбить число в массив с трёхзначными числами\r\n  if (k[0].length === 1) k[0] = \"00\" + k[0];\r\n  if (k[0].length === 2) k[0] = \"0\" + k[0];\r\n  for (let j = (k.length - 1); j >= 0; j--) { // соединить трёхзначные числа в одно число, добавив названия разрядов с окончаниями\r\n    if (k[j] !== \"000\") {\r\n      i = (((d && j === (k.length - 1)) || j === (k.length - 2)) && (k[j][2] === \"1\" || k[j][2] === \"2\") ? t(k[j], 1) : t(k[j]))\r\n        + declOfNum(k[j], e[0][k.length - 1 - j], (j === (k.length - 2) ? e[1] : e[2])) + i;\r\n    }\r\n  }\r\n\r\n  // Можно было просто так: return i\r\n  // А вот так выведет с заглавной буквы и без лишнего пробела спереди:\r\n  return i[1].toUpperCase() + i.substring(2);\r\n};\r\n\r\n/* ============================ */\r\n/* Strings */\r\n/* ============================ */\r\n\r\nconst strSubString = (fullString, leftString, rightString, startPozSearch) => {\r\n  const s = startPozSearch || 0;\r\n  const a = leftString || \"\";\r\n  const b = rightString || \"\";\r\n  if (!fullString || s > fullString.length) return \"\";\r\n\r\n  let tmpPozLeft, tmpPozRight;\r\n\r\n  if ((a.length === 0) && (b.length > 0)) {\r\n    tmpPozLeft = s;\r\n    tmpPozRight = fullString.indexOf(b, s);\r\n  } else if ((a.length > 0) && (b.length === 0)) {\r\n    tmpPozLeft = fullString.indexOf(a, s);\r\n    tmpPozRight = fullString.length;\r\n  } else {\r\n    tmpPozLeft = fullString.indexOf(a, s);\r\n    tmpPozRight = fullString.indexOf(b, tmpPozLeft + a.length);\r\n    if (!~tmpPozRight) tmpPozRight = tmpPozLeft + a.length; // fullString.length;\r\n  }\r\n\r\n  if (tmpPozLeft === -1 || tmpPozRight === -1) return \"\";\r\n  return fullString.slice(tmpPozLeft + leftString.length, tmpPozRight);\r\n};\r\n\r\nconst strTrimRight = (str) => str.replace(/(\\s+|\\n+)$/g, \"\");\r\n\r\nconst strTrimLeft = (str) => str.replace(/^(\\s+|\\n+)/g, \"\");\r\n\r\nconst strReplaceAll = (str, search, replacement) => str.split(search).join(replacement);\r\n\r\n// removes all spaces at the beginning and at the end of the string\r\nconst strTrim = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \" \");\r\n  return strTrimLeft(strTrimRight(s));\r\n};\r\n\r\n// removes all spaces at the beginning and at the end of the line\r\n// in addition, it replaces several consecutive gaps within the line by one space\r\nconst strTrimMiddle = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \" \");\r\n  return strTrim(s).replace(/\\s\\s+/g, \" \");\r\n};\r\n\r\nconst strTrimAll = (str) => {\r\n  const s = strReplaceAll(str, unknowSpase, \"\");\r\n  return s.replace(/(\\s|\\n)/g, \"\");\r\n};\r\n\r\nconst strGetShortFIO = (fullFIO) => {\r\n  let outS = String(fullFIO || \"\");\r\n  if (outS === \"\") return \"\";\r\n  const mPr = strTrimMiddle(outS).split(\" \");\r\n  if (mPr.length > 1) {\r\n    outS = mPr[0] + \" \" + mPr[1].slice(0, 1) + \".\";\r\n    if (mPr[2]) outS += mPr[2].slice(0, 1) + \".\";\r\n  }\r\n  return outS;\r\n};\r\n\r\nconst strMakeID = (length) => {\r\n  let result = \"\";\r\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n  }\r\n  return result;\r\n};\r\n\r\nconst strTransliterateRUtoEN = (word) => {\r\n  const a = {\r\n    Ё: \"YO\",\r\n    Й: \"I\",\r\n    Ц: \"TS\",\r\n    У: \"U\",\r\n    К: \"K\",\r\n    Е: \"E\",\r\n    Н: \"N\",\r\n    Г: \"G\",\r\n    Ш: \"SH\",\r\n    Щ: \"SCH\",\r\n    З: \"Z\",\r\n    Х: \"H\",\r\n    Ъ: \"'\",\r\n    ё: \"yo\",\r\n    й: \"i\",\r\n    ц: \"ts\",\r\n    у: \"u\",\r\n    к: \"k\",\r\n    е: \"e\",\r\n    н: \"n\",\r\n    г: \"g\",\r\n    ш: \"sh\",\r\n    щ: \"sch\",\r\n    з: \"z\",\r\n    х: \"h\",\r\n    ъ: \"'\",\r\n    Ф: \"F\",\r\n    Ы: \"I\",\r\n    В: \"V\",\r\n    А: \"a\",\r\n    П: \"P\",\r\n    Р: \"R\",\r\n    О: \"O\",\r\n    Л: \"L\",\r\n    Д: \"D\",\r\n    Ж: \"ZH\",\r\n    Э: \"E\",\r\n    ф: \"f\",\r\n    ы: \"i\",\r\n    в: \"v\",\r\n    а: \"a\",\r\n    п: \"p\",\r\n    р: \"r\",\r\n    о: \"o\",\r\n    л: \"l\",\r\n    д: \"d\",\r\n    ж: \"zh\",\r\n    э: \"e\",\r\n    Я: \"Ya\",\r\n    Ч: \"CH\",\r\n    С: \"S\",\r\n    М: \"M\",\r\n    И: \"I\",\r\n    Т: \"T\",\r\n    Ь: \"'\",\r\n    Б: \"B\",\r\n    Ю: \"YU\",\r\n    я: \"ya\",\r\n    ч: \"ch\",\r\n    с: \"s\",\r\n    м: \"m\",\r\n    и: \"i\",\r\n    т: \"t\",\r\n    ь: \"'\",\r\n    б: \"b\",\r\n    ю: \"yu\"\r\n  };\r\n  return word.split(\"\").map((char) => a[char] || char).join(\"\");\r\n};\r\n\r\nconst strFileExtension = (filename) => {\r\n  // Alternate function: path.parse(filename).ext\r\n  const prts = (filename || \"\").split(\".\");\r\n  const ext = (prts[prts.length - 1] || prts).trim().toLowerCase();\r\n  return (prts.length >= 2 ? ext : \"\");\r\n};\r\n\r\nconst strClearFileName = (filename) => {\r\n  // Alternate function: path.parse(filename).name (or .base - with extention)\r\n  const i = filename.lastIndexOf(\".\");\r\n  let a = ((i < 0) ? \"\" : filename.slice(0, i));\r\n  a = strReplaceAll(a, \"\\\\\", \"/\");\r\n  const j = a.lastIndexOf(\"/\");\r\n  const b = ((j < 0) ? a : a.slice(j + 1, a.length - j - 1));\r\n  return b;\r\n};\r\n\r\n// Может ли строка стать числом\r\nconst strCanBeNum = (value) => {\r\n  if (value !== null && value !== \"\" && typeof value !== \"undefined\") {\r\n    let val = value; if (isString(value)) val = strReplaceAll(value, unknowSpase).replace(/,/g, \".\").replace(/\\s/g, \"\");\r\n    const intValue = parseInt(val, 10);\r\n    return !(Number.isNaN(intValue) || Number.isFinite(intValue));\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst hasUnicode = (str) => {\r\n  for (let i = 0; i < str.length; i++) {\r\n    if (str.charCodeAt(i) > 127) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/* ============================ */\r\n/* Arrays */\r\n/* ============================ */\r\n\r\nconst arrContains = (arr, elem, trimParam, caseNoSensitiveParam) => {\r\n  if (!isArray(arr) || !arr.length || isUndefinedOrNull(elem)) return false;\r\n  let ans = false;\r\n  let v = elem;\r\n  if (isString(v)) {\r\n    if (trimParam === true) { v = v.trim() }\r\n    if (caseNoSensitiveParam === true) { v = v.toLowerCase() }\r\n  }\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let a = arr[i];\r\n    if (isString(a)) {\r\n      if (trimParam === true) { a = a.trim() }\r\n      if (caseNoSensitiveParam === true) { a = a.toLowerCase() }\r\n    }\r\n    if (a === v) { ans = true; break }\r\n  }\r\n  return ans;\r\n};\r\n\r\n// Сравнение строк. Поместил тут, т.к. arrContains() определен только что.\r\n// params = \"toUpperCase, toLowerCase, caseNoSensitive, trim, trimMiddle, trimAll, transliterate, substring\"\r\n// или так: strCompare(str1, str2, \".caseNoSensitive.touppercase.tolowercase.trim.trimAll.transliterate.substring\")\r\nconst strCompare = (str1, str2, params) => {\r\n  if (!isString(str1) || !isString(str2)) return false;\r\n  if (!params || !isString(params)) return Boolean(str1 === str2);\r\n  const prms = strTrimAll(params).toLowerCase().replace(/(,|\\.)/g, \";\").split(\";\");\r\n  let s1 = str1, s2 = str2;\r\n  prms.forEach((p) => {\r\n    if (p === \"touppercase\" || p === \"tolowercase\" || p === \"casenosensitive\") { s1 = s1.toLowerCase(); s2 = s2.toLowerCase() }\r\n    else if (p === \"trim\") { s1 = strTrim(s1); s2 = strTrim(s2) }\r\n    else if (p === \"trimmiddle\") { s1 = strTrimMiddle(s1); s2 = strTrimMiddle(s2) }\r\n    else if (p === \"trimall\") { s1 = strTrimAll(s1); s2 = strTrimAll(s2) }\r\n    else if (p === \"transliterate\") { s1 = strTransliterateRUtoEN(s1); s2 = strTransliterateRUtoEN(s2) }\r\n  });\r\n\r\n  if (arrContains(prms, \"substring\")) return Boolean(~s1.indexOf(s2));\r\n  return Boolean(s1 === s2);\r\n};\r\n\r\n// Check 2 arrays are similar or not\r\nconst arrCompare = (arr1, arr2, exactmatch) => {\r\n  if (!isArray(arr1)) return false;\r\n  let ar2 = objClone(arr2); if (!isArray(arr2)) ar2 = [arr2];\r\n  let ans = true;\r\n  for (let i = 0; i < ar2.length; i++) {\r\n    let fnd = false;\r\n    for (let j = 0; j < arr1.length; j++) {\r\n      if (arr1[i] === ar2[j]) { fnd = true; break }\r\n    }\r\n    if (!fnd) { ans = false; break }\r\n  }\r\n  if (exactmatch === true) {\r\n    for (let i = 0; i < arr1.length; i++) {\r\n      let fnd = false;\r\n      for (let j = 0; j < ar2.length; j++) {\r\n        if (ar2[i] === arr1[j]) { fnd = true; break }\r\n      }\r\n      if (!fnd) { ans = false; break }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\n// Find object in array. optional comparedFields = [\"Title\", \"job\"...]\r\nconst arrFindObj = (arr, obj, comparedFields) => {\r\n  if (!isArray(arr) || !isObject(obj)) return false;\r\n  let ans = -1, str2 = \"\"; const obj2 = {};\r\n  if (comparedFields && isArray(comparedFields)) {\r\n    for (let j = 0; j < comparedFields.length; j++) {\r\n      if (objHasKey(obj, comparedFields[j])) obj2[comparedFields[j]] = obj[comparedFields[j]];\r\n    }\r\n    str2 = JSON.stringify(obj2);\r\n  }\r\n  else {\r\n    str2 = JSON.stringify(obj);\r\n  }\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const oo = arr[i], obj1 = {}; let str1 = \"\";\r\n    if (comparedFields && isArray(comparedFields)) {\r\n      for (let j = 0; j < comparedFields.length; j++) {\r\n        if (objHasKey(oo, comparedFields[j])) obj1[comparedFields[j]] = oo[comparedFields[j]];\r\n      }\r\n      str1 = JSON.stringify(obj1);\r\n    }\r\n    else {\r\n      const flds = objKeys(obj);\r\n      for (let j = 0; j < flds.length; j++) {\r\n        if (objHasKey(oo, flds[j])) obj1[flds[j]] = oo[flds[j]];\r\n      }\r\n      str1 = JSON.stringify(obj1);\r\n    }\r\n\r\n    if (str1 === str2) { ans = i; break }\r\n  }\r\n  return ans; // (-1 || 0...arr.length)\r\n};\r\n\r\nconst arrPush = (mainMtrx, addedMtrx) => {\r\n  // mainMtrx и addedMtrx могут быть матрицей, а могут и не быть ей (просто строка или число)\r\n  let result = [];\r\n  if (isArray(mainMtrx)) { result = mainMtrx }\r\n  else { result.push(mainMtrx) }\r\n\r\n  if (isArray(addedMtrx)) {\r\n    for (let j = 0; j < addedMtrx.length; j++) {\r\n      result.push(addedMtrx[j]);\r\n    }\r\n  }\r\n  else {\r\n    result.push(addedMtrx);\r\n  }\r\n  return result;\r\n};\r\n\r\nconst arrRemove = (mainMtrx, deletedMtrx, delNullValuesParam, trimParam, caseNoSensitiveParam) => {\r\n  const result = [];\r\n  let smplMtrx = [], delMtrx = [];\r\n  if (isArray(mainMtrx)) { smplMtrx = mainMtrx }\r\n  else { smplMtrx.push(mainMtrx) }\r\n\r\n  if (isArray(deletedMtrx)) { delMtrx = deletedMtrx }\r\n  else { delMtrx.push(deletedMtrx) }\r\n\r\n  for (let i = 0; i < smplMtrx.length; i++) {\r\n    let tval = smplMtrx[i];\r\n    if (isString(tval)) {\r\n      if (trimParam) tval = tval.trim();\r\n      if (caseNoSensitiveParam) tval.toLowerCase();\r\n    }\r\n    if (!delNullValuesParam || (isString(tval) && tval !== \"\")) {\r\n      let found = false;\r\n      for (let j = 0; j < delMtrx.length; j++) {\r\n        let dval = delMtrx[j];\r\n        if (isString(dval)) {\r\n          if (trimParam) dval = dval.trim();\r\n          if (caseNoSensitiveParam) dval.toLowerCase();\r\n        }\r\n        if (dval === tval) { found = true; break }\r\n      }\r\n      if (!found) result.push(smplMtrx[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst arrGetUnique = (mainMtrx, delNullValuesParam, trimParam, caseNoSensitiveParam) => {\r\n  const result = [];\r\n  for (let i = 0; i < mainMtrx.length; i++) {\r\n    let tval = mainMtrx[i];\r\n    if (isString(tval)) {\r\n      if (trimParam) tval = tval.trim();\r\n      if (caseNoSensitiveParam) tval.toLowerCase();\r\n    }\r\n    if (!delNullValuesParam || tval !== \"\") {\r\n      let found = false;\r\n      for (let j = 0; j < result.length; j++) {\r\n        let dval = result[j];\r\n        if (isString(dval)) {\r\n          if (trimParam) dval = dval.trim();\r\n          if (caseNoSensitiveParam) dval.toLowerCase();\r\n        }\r\n        if (dval === tval) { found = true; break }\r\n      }\r\n      if (!found) result.push(mainMtrx[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/* ============================ */\r\n/* String to Numbers */\r\n/* ============================ */\r\n\r\nconst strToNum = (str, roundparam, absparam) => {\r\n  if (!str || !isString(str)) return 0;\r\n  const rg = /^-?(\\d+(\\.\\d*)?|\\.\\d+)$/;\r\n  // \\-? - может в начале стоит минус, а может и нет\r\n  // \\d+(\\.\\d+)? - [цифра или несколько] точка и несколько цифр после нее (а может и нет точки и цифр после нее)\r\n  // \\.\\d+ - число вроде .575 (начинается с точки)\r\n  const sNum = strReplaceAll(str.replace(/\\s+/g, \"\").replace(/,/, \".\"), unknowSpase, \"\");\r\n  const allNums = sNum.match(rg); // Сердце функции\r\n  if (!allNums.length) return 0;\r\n  try {\r\n    let ans = Number(allNums[0]);\r\n    if (absparam) ans = Math.abs(ans);\r\n    if (roundparam) ans = numRoundTo(ans, roundparam);\r\n    return ans;\r\n  }\r\n  catch (e) {\r\n    return 0;\r\n  }\r\n};\r\n\r\n// Возвращает массив из всех чисел в строке. Числа могут быть целыми, отрицательными, дробными...\r\nconst strGetAllNumbers = (str, roundparam, absparam) => {\r\n  if (!isString(str)) return null;\r\n  const sNum = strReplaceAll(str.replace(/,/, \".\"), unknowSpase);\r\n  const rg = /-?\\d+(\\.\\d+)?/gi;\r\n  // \\-? - может в начале стоит минус, а может и нет\r\n  // \\d+(\\.\\d+)? - [цифра или несколько] точка и несколько цифр после нее (а может и нет точки и цифр после нее)\r\n  // \\.\\d+ - число вроде .575 (начинается с точки) - этот вариант я убрал\r\n\r\n  const allNums = sNum.match(rg);\r\n\r\n  if (isArray(allNums)) {\r\n    for (let i = 0; i < allNums.length; i++) {\r\n      allNums[i] = strToNum(allNums[i]);\r\n      if (absparam) allNums[i] = Math.abs(allNums[i]);\r\n      if (roundparam) allNums[i] = numRoundTo(allNums[i], roundparam);\r\n    }\r\n    return allNums;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Возвращает i-число из строки (может быть отрицательным или дробным)\r\nconst strSearchNum = (CellString, indexNum, roundparam, absparam) => {\r\n  if (!isRealValue(CellString)) return 0;\r\n  let retVal = 0;\r\n  const allNumbers = strGetAllNumbers(CellString, roundparam, absparam);\r\n  if (isArray(allNumbers)) {\r\n    if (indexNum === 0) { retVal = allNumbers[allNumbers.length - 1] }\r\n    else if (numIsInt(indexNum) && isNumber(allNumbers[indexNum - 1])) { retVal = allNumbers[indexNum - 1] }\r\n  }\r\n  return retVal;\r\n};\r\n\r\n/* ============================ */\r\n/* Dates */\r\n/* ============================ */\r\n\r\nconst dateGetWeekDay = (date, lngparam) => {\r\n  let lng = \"ru\"; if (isString(lngparam)) lng = lngparam;\r\n  let days;\r\n  if (lng === \"ru\") {\r\n    days = [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"];\r\n  } else {\r\n    days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\r\n  }\r\n  return days[date.getDay()];\r\n};\r\n\r\nconst dateToString = (scDate, formatparam, hoursOffset) => {\r\n  // Выводит в формате \"YYYY-MM-DD\"\r\n  if (!isDate(scDate)) return \"\";\r\n  let frmt = \"YYYY-MM-DD\"; if (isString(formatparam) && formatparam !== \"\") frmt = formatparam;\r\n  const ssDate = objClone(scDate);\r\n  if (hoursOffset) ssDate.setTime(ssDate.getTime() + hoursOffset * 60000 * 60);\r\n\r\n  const realMonth = +ssDate.getMonth() + 1;\r\n  const realDate = +ssDate.getDate();\r\n  const ye = ssDate.getFullYear();\r\n  const mnth = (realMonth < 10 ? \"0\" : \"\") + realMonth;\r\n  const da = (realDate < 10 ? \"0\" : \"\") + realDate;\r\n  let h = \"0\" + ssDate.getHours(); h = h.slice(-2);\r\n  let m = \"0\" + ssDate.getMinutes(); m = m.slice(-2);\r\n  let s = \"0\" + ssDate.getSeconds(); s = s.slice(-2);\r\n\r\n  let strDate = \"\";\r\n  switch (frmt) {\r\n    case \"DD.MM.YYYY\":\r\n      strDate = da + \".\" + mnth + \".\" + ye;\r\n      break; // DD.MM.YYYY\r\n    case \"DD.MM.YYYY hh:mm\":\r\n      strDate = da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m;\r\n      break; // DD.MM.YYYY hh:mm\r\n    case \"DD.MM.YYYY hh:mm:ss\":\r\n      strDate = da + \".\" + mnth + \".\" + ye + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // DD.MM.YYYY hh:mm\r\n    case \"YYYY-MM-DD hh:mm:ss\":\r\n      strDate = ye + \"-\" + mnth + \"-\" + da + \" \" + h + \":\" + m + \":\" + s;\r\n      break; // YYYY-MM-DD hh:mm:ss\r\n    case \"dd DD.MM.YYYY\":\r\n      strDate = dateGetWeekDay(ssDate) + \" \" + da + \".\" + mnth + \".\" + ye;\r\n      break; // пн DD.MM.YYYY\r\n    default:\r\n      strDate = ye + \"-\" + mnth + \"-\" + da;\r\n      break; // YYYY-MM-DD\r\n  }\r\n  return strDate;\r\n};\r\n\r\nconst dateFromString = (datastr, formatparam, hoursOffset) => {\r\n  if (!isString(datastr)) return null;\r\n  let frmt = \"YYYY-MM-DD\"; if (isString(formatparam) && formatparam !== \"\") frmt = formatparam;\r\n  let da, mnth, ye, dStr, hh = 0, mm = 0, ss = 0;\r\n  switch (frmt) {\r\n    case \"DD.MM.YYYY\":\r\n      dStr = datastr.split(\".\");\r\n      da = +dStr[0];\r\n      mnth = +dStr[1] - 1;\r\n      ye = +dStr[2];\r\n      break; // DD.MM.YYYY\r\n    case \"DD.MM.YYYY hh:mm\":\r\n    case \"DD.MM.YYYY hh:mm:ss\": {\r\n      const dts1 = strSubString(datastr, \"\", \" \");\r\n      if (dts1 === \"\") {\r\n        dStr = datastr.split(\".\");\r\n        da = +dStr[0];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[2];\r\n        break; // DD.MM.YYYY\r\n      }\r\n      else {\r\n        const dts2 = strSubString(datastr, \" \", \"\");\r\n        dStr = dts1.split(\".\");\r\n        da = +dStr[0];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[2]; // DD.MM.YYYY\r\n        const dTime = dts2.split(\":\");\r\n        hh = +dTime[0]; // hh:mm:ss\r\n        if (dTime.length > 1) mm = +dTime[1];\r\n        if (dTime.length > 2) ss = +dTime[2];\r\n      }\r\n      break;\r\n    }\r\n    case \"YYYY-MM-DD hh:mm:ss\": {\r\n      const dts1 = strSubString(datastr, \"\", \" \");\r\n      if (dts1 === \"\") {\r\n        dStr = datastr.split(\"-\");\r\n        da = +dStr[2];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[0];\r\n        break; // YYYY-MM-DD\r\n      }\r\n      else {\r\n        const dts2 = strSubString(datastr, \" \", \"\");\r\n        dStr = dts1.split(\"-\");\r\n        da = +dStr[2];\r\n        mnth = +dStr[1] - 1;\r\n        ye = +dStr[0]; // YYYY-MM-DD\r\n        const dTime = dts2.split(\":\");\r\n        hh = +dTime[0]; // hh:mm:ss\r\n        if (dTime.length > 1) mm = +dTime[1];\r\n        if (dTime.length > 2) ss = +dTime[2];\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      dStr = datastr.split(\"-\");\r\n      da = +dStr[2];\r\n      mnth = +dStr[1] - 1;\r\n      ye = +dStr[0];\r\n      break; // YYYY-MM-DD\r\n  }\r\n\r\n  let data = 0;\r\n  try {\r\n    data = new Date(ye, mnth, da, hh, mm, ss);\r\n    if (hoursOffset) data.setTime(data.getTime() + hoursOffset * 60000 * 60);\r\n  } catch (ex) {\r\n    // log(ex.message);\r\n  }\r\n  return data;\r\n};\r\n\r\nconst dateDaysBetween = (d1, d2) => {\r\n  try {\r\n    const timeDiff = d1.getTime() - d2.getTime();\r\n    const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)) - 1;\r\n    return diffDays;\r\n  }\r\n  catch (ex) {\r\n    // log(ex.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst validateTimestamp = (timestamp) => {\r\n  if (!/\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}/.test(timestamp)) return false;\r\n  const split = timestamp.split(/[^\\d]+/);\r\n  // const year = parseFloat(split[0]);\r\n  const month = parseFloat(split[1]);\r\n  const day = parseFloat(split[2]);\r\n  const hour = parseFloat(split[3]);\r\n  const minute = parseFloat(split[4]);\r\n  const second = parseFloat(split[5]);\r\n  return hour < 25 && minute < 61 && second < 61 && month < 13 && day < 32;\r\n};\r\n\r\nconst ExcelDateToJSDate = (serial) => {\r\n  const utc_days = Math.floor(serial - 25569);\r\n  const utc_value = utc_days * 86400;\r\n  const date_info = new Date(utc_value * 1000);\r\n  const fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n  let total_seconds = Math.floor(86400 * fractional_day);\r\n  const seconds = total_seconds % 60;\r\n  total_seconds -= seconds;\r\n  const hours = Math.floor(total_seconds / (60 * 60));\r\n  const minutes = Math.floor(total_seconds / 60) % 60;\r\n  return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);\r\n};\r\n\r\nconst JSDateToExcelDate = (serial) => {\r\n  const td = objClone(serial);\r\n  if (!isDate(td)) return 0;\r\n  td.setTime(td.getTime() + (6 * 60000 * 60)); // td.addHours(6);\r\n  return (Number(td) / 86400000) + 25569;\r\n};\r\n\r\n/* ============================ */\r\n/*     Encoding - Decoding      */\r\n/* ============================ */\r\n\r\nconst Base64encode = (s) => {\r\n  const buff = Buffer.from(s);\r\n  return buff.toString(\"base64\");\r\n};\r\n\r\nconst Base64decode = (s, charCode) => {\r\n  const buff = Buffer.from(s, \"base64\");\r\n  return buff.toString(charCode || \"utf8\");\r\n  // ascii , utf8 , ucs2 , base64 , binary\r\n};\r\n\r\n/* Universal functions */\r\n\r\nconst pathParentModule = () => {\r\n  let ans = \"???\";\r\n  if (module && module.parent) { // Server-code\r\n    const mpath = strReplaceAll(module.parent.filename, \"\\\\\", \"/\").split(\"/\");\r\n    ans = mpath[mpath.length - 1];\r\n    if (mpath.length > 1) ans = mpath[mpath.length - 2] + \"/\" + mpath[mpath.length - 1];\r\n  }\r\n  else { // Client-code\r\n    const errstack = String((new Error()).stack).replace(\"Error\\n\", \"\").split(\"\\n\"), stk = [];\r\n    errstack.forEach((ee) => { stk.push(ee.trim().replace(/^at\\s/g, \"\")) });\r\n    // Analise Err.stack\r\n    for (let i = 0; i < stk.length; i++) {\r\n      if ((/\\[as log\\]/g).test(stk[i])) {\r\n        ans = stk[i + 1] || stk[i];\r\n        break;\r\n      }\r\n    }\r\n    const regex1 = /\\/js\\/([a-z]+\\.(js|jsx|ejs))/ig;\r\n    if (regex1.test(ans)) ans = ans.match(regex1)[0];\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst log = (prms) => new Promise((resolve, reject) => {\r\n  // prms = {msgtype, message, module, caller, userip, toconsole=true, tobase=false};\r\n  // prms can be a simple String\r\n  let p = objClone(prms);\r\n\r\n  if (isString(p)) { p = { message: prms, msgtype: \"info\", toconsole: true, tobase: false } }\r\n  else if (!isObject(p)) { reject(new Error(\"(prms) is not a String and is not an Object\")); return }\r\n\r\n  if (p.msg && !p.message) p.message = p.msg;\r\n  if (!p.message || p.message === \"\") { reject(new Error(\"arg message is null\")); return }\r\n  if (isString(p.message) && !p.message.startsWith(\"ClientSide. \")) p.message = \"ClientSide. \" + p.message;\r\n\r\n  if (!p.caller) {\r\n    try { p.caller = log.caller; p.caller = String(p.caller) }\r\n    catch (err1) { p.caller = \"???\" }\r\n  }\r\n  if (p.caller.length > 100) p.caller = p.caller.slice(0, 100) + \"....\";\r\n\r\n  // msgtype: error, warning, info\r\n  p.msgtype = p.msgtype || \"info\";\r\n  p.module = p.module || pathParentModule();\r\n  p.datetime = p.datetime || new Date();\r\n  // p.userip = p.userip || \"???\";\r\n\r\n  if (p.tobase === true && window.$) {\r\n    window.$.ajax({\r\n      type: \"POST\",\r\n      data: JSON.stringify(p),\r\n      contentType: \"application/json\",\r\n      url: \"/api/toserverlog\"\r\n    }).done((ans1) => {\r\n      if (ans1.userip) p.userip = ans1.userip;\r\n      if (enableConsoleLog && (p.toconsole === true || typeof p.toconsole === \"undefined\")) {\r\n        if (p.msgtype === \"error\") { console.error(p.message) }\r\n        else { console.log(p) }\r\n      }\r\n      resolve(true);\r\n    }).fail((err1) => {\r\n      console.log(err1); reject(new Error(\"$.ajax error\"));\r\n    });\r\n  }\r\n  else {\r\n    if (enableConsoleLog && (p.toconsole === true || typeof p.toconsole === \"undefined\")) {\r\n      if (p.msgtype === \"error\") { console.error(p) }\r\n      else { console.log(p) }\r\n    }\r\n    resolve(true);\r\n  }\r\n});\r\n\r\n// fetch helpers\r\nconst fetchGetHeaders = (response, header) => {\r\n  const ans = {result: false, headers: [], values: [], header, value: undefined };\r\n  if (response && response.headers) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const pair of response.headers.entries()) {\r\n      if (pair.length) {\r\n        ans.headers.push(pair[0]); ans.values.push(pair[1]);\r\n        if (header && header !== \"\") {\r\n          if (pair[0].toLowerCase() === header.toLowerCase()) { ans.header = pair[0]; ans.value = pair[1]; ans.result = true }\r\n        }\r\n        else {\r\n          ans.result = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\nconst delay = (ms) => new Promise((resolve) => {\r\n  setTimeout(resolve, ms);\r\n});\r\n\r\nconst compareIP = (ip, mask) => {\r\n  let ans = false; if (!ip || !isString(ip) || !mask) return ans;\r\n  if (isString(mask)) { return Boolean(ip === mask) }\r\n  if (isRegExp(mask)) { mask.lastIndex = 0; return (mask.test(ip)) }\r\n  if (isArray(mask)) {\r\n    for (let i = 0; i < mask.length; i++) {\r\n      if (isString(mask[i]) && ip === mask) { ans = true; break }\r\n      if (isRegExp(mask[i])) { mask[i].lastIndex = 0; if (mask[i].test(ip)) { ans = true; break } }\r\n    }\r\n  }\r\n  return ans;\r\n};\r\n\r\n/* ============================ */\r\n/*   and finnally - Exports!    */\r\n/* ============================ */\r\n\r\nmodule.exports = {\r\n  log, // console.log() + save to 'db.systemlog'\r\n  isString, // detect type of var\r\n  isNumber,\r\n  canbeNumber, // checking can String be convertible to Number\r\n  isBoolean,\r\n  isDate,\r\n  isArray,\r\n  isFunction,\r\n  isObject,\r\n  isUndefinedOrNull,\r\n  isRegExp,\r\n  isRealValue,\r\n  isMobileDevice, // true - if user open page on mobile device\r\n  documentSize, // usefull content width & height\r\n  windowSize, // full page width & height\r\n  objByString, // Get Object one key value. Args: Object, Path: \"dict.ru.homepage.title[0]\"\r\n  objClone, // Clone Objects, Arrays, Dates and simple var (Numbers, Strings...)\r\n  objKeys,\r\n  objHasKey,\r\n  objToJSON,\r\n  objFromJSON,\r\n  strSubString,\r\n  strToNum,\r\n  strTrimRight,\r\n  strTrimLeft,\r\n  strTrim,\r\n  strTrimMiddle,\r\n  strTrimAll,\r\n  strReplaceAll,\r\n  strGetShortFIO,\r\n  strMakeID,\r\n  strTransliterateRUtoEN,\r\n  strFileExtension,\r\n  strClearFileName,\r\n  strCanBeNum,\r\n  strGetAllNumbers,\r\n  strSearchNum,\r\n  strCompare, // strCompare(str1, str2, \".caseNoSensitive.touppercase.tolowercase.trim.trimAll.transliterate.substring\")\r\n  hasUnicode,\r\n  arrContains, // RetVal: Boolean. Args: (arr, elem, trimParam, caseNoSensitiveParam). Finding Numbers or String in Arrays\r\n  arrPush, // push []\r\n  arrRemove, // remove []\r\n  arrGetUnique,\r\n  arrCompare, // Compare 2 Arrays. RetVal: Boolean\r\n  arrFindObj, // Find i-Object in Array using Some fields. arrFindObj (arr, obj, comparedFields: [\"name\", \"internalip\"...])\r\n  numIsInt,\r\n  numRoundTo,\r\n  numRoundToNearest,\r\n  numToFloatStr,\r\n  numToPhrase,\r\n  numToPhrase2,\r\n  declOfNum,\r\n  numRandom,\r\n  dateToString,\r\n  dateFromString,\r\n  dateDaysBetween,\r\n  ExcelDateToJSDate,\r\n  JSDateToExcelDate,\r\n  validateTimestamp,\r\n  Base64encode,\r\n  Base64decode,\r\n  fetchGetHeaders,\r\n  delay,\r\n  compareIP // compareIP (ip, mask) => true / false. \"mask\" can be String || Regexp || Array(String || Regexp)\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(905);\n"],"names":["root","factory","exports","module","define","amd","self","_typeof","obj","Symbol","iterator","constructor","prototype","__esModule","unknowSpase","String","fromCharCode","isString","value","Boolean","isNumber","Number","isFinite","isBoolean","isDate","Date","isArray","Array","isObject","Object","isUndefinedOrNull","isRegExp","RegExp","isRealValue","numIsInt","num","Math","round","objToJSON","sourceObj","a","JSON","stringify","err","objFromJSON","sourceJSON","parse","objClone","ans","getTime","slice","objKeys","keys","forEach","key","push","objHasKey","numRoundTo","n","x","declOfNum","t","o","length","strSubString","fullString","leftString","rightString","startPozSearch","tmpPozLeft","tmpPozRight","s","b","indexOf","strTrimRight","str","replace","strTrimLeft","strReplaceAll","search","replacement","split","join","strTrim","strTrimMiddle","strTrimAll","strTransliterateRUtoEN","word","Ё","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","ё","й","ц","у","к","е","н","г","ш","щ","з","х","ъ","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","ф","ы","в","а","п","р","о","л","д","ж","э","Я","Ч","С","М","И","Т","Ь","Б","Ю","я","ч","с","м","и","т","ь","б","ю","map","char","arrContains","arr","elem","trimParam","caseNoSensitiveParam","v","trim","toLowerCase","i","strToNum","roundparam","absparam","allNums","match","abs","e","strGetAllNumbers","log","prms","Promise","resolve","reject","p","message","msgtype","toconsole","tobase","Error","msg","startsWith","caller","err1","parent","mpath","filename","errstack","stack","stk","ee","test","regex1","pathParentModule","datetime","window","$","ajax","type","data","contentType","url","done","ans1","userip","console","error","fail","canbeNumber","isNaN","parseFloat","isFunction","isMobileDevice","userAgent","substr","documentSize","documnt","width","height","result","dcm","document","documentElement","scrollWidth","scrollHeight","windowSize","windw","wnd","innerWidth","innerHeight","objByString","s1","o1","k","strGetShortFIO","fullFIO","outS","mPr","strMakeID","characters","charAt","floor","random","strFileExtension","prts","ext","strClearFileName","lastIndexOf","j","strCanBeNum","val","intValue","parseInt","strSearchNum","CellString","indexNum","retVal","allNumbers","strCompare","str1","str2","params","s2","hasUnicode","charCodeAt","arrPush","mainMtrx","addedMtrx","arrRemove","deletedMtrx","delNullValuesParam","smplMtrx","delMtrx","tval","found","dval","arrGetUnique","arrCompare","arr1","arr2","exactmatch","ar2","fnd","arrFindObj","comparedFields","obj2","oo","obj1","flds","numRoundToNearest","m","numToFloatStr","triads","d","toString","repeat","numToPhrase","c","currency","trimAll","toUpperCase","groups","RUB","USD","EUR","names","r","y","numToPhrase2","kk","dd","substring","numRandom","minVparam","maxVparam","minV","maxV","dateToString","scDate","formatparam","hoursOffset","frmt","ssDate","setTime","realMonth","getMonth","realDate","getDate","ye","getFullYear","mnth","da","h","getHours","getMinutes","getSeconds","date","lngparam","lng","strDate","getDay","dateFromString","datastr","dStr","hh","mm","ss","dts1","dts2","dTime","ex","dateDaysBetween","d1","d2","timeDiff","ceil","ExcelDateToJSDate","serial","utc_days","date_info","fractional_day","total_seconds","seconds","hours","minutes","JSDateToExcelDate","td","validateTimestamp","timestamp","month","day","hour","minute","second","Base64encode","Buffer","from","Base64decode","charCode","fetchGetHeaders","response","header","headers","values","undefined","entries","pair","delay","ms","setTimeout","compareIP","ip","mask","lastIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","nmd","paths","children"],"sourceRoot":""}